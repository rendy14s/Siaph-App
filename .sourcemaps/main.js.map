{"version":3,"sources":["../../src/shared/sdk/storage/storage.swaps.ts","../../src/shared/sdk/services/custom/SiaphUsercredential.ts","../../SiaphUsercredential.js","../../src/shared/sdk/services/custom/SiaphDocuments.ts","../../SiaphDocuments.js","../../src/shared/sdk/services/custom/SiaphDepthrole.ts","../../SiaphDepthrole.js","../../src/shared/sdk/services/custom/SiaphTrackingdocuments.ts","../../SiaphTrackingdocuments.js","../../src/shared/sdk/services/custom/SiaphNoteddocuments.ts","../../SiaphNoteddocuments.js","../../src/shared/sdk/services/custom/SiaphDocumentslibrary.ts","../../SiaphDocumentslibrary.js","../../src/shared/sdk/sockets/socket.driver.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/shared/sdk/models/User.ts","../../src/shared/sdk/models/Acl.ts","../../src/shared/sdk/models/Accesstoken.ts","../../src/shared/sdk/services/custom/SDKModels.ts","../../src/shared/sdk/models/Rolemapping.ts","../../src/shared/sdk/models/SiaphDepthrole.ts","../../src/shared/sdk/models/SiaphDocuments.ts","../../src/shared/sdk/models/SiaphDocumentslibrary.ts","../../src/shared/sdk/models/SiaphNoteddocuments.ts","../../src/shared/sdk/models/SiaphTrackingdocuments.ts","../../src/shared/sdk/models/SiaphUsercredential.ts","../../src/shared/sdk/models/BaseModels.ts","../../src/shared/sdk/services/core/auth.service.ts","../../auth.service.js","../../src/shared/sdk/lb.config.ts","../../src/shared/sdk/services/core/search.params.ts","../../src/app/app.component.ngfactory.ts","../../src/pages/tabs/tabs.ngfactory.ts","../../src/app/app.component.ts","../../app.component.js","../../src/pages/tabs/tabs.ts","../../tabs.js","../../src/shared/sdk/services/custom/logger.service.ts","../../logger.service.js","../../src/shared/sdk/storage/cookie.browser.ts","../../src/shared/sdk/storage/storage.browser.ts","../../src/shared/sdk/sockets/socket.browser.ts","../../src/shared/sdk/services/core/io.service.ts","../../src/shared/sdk/models/FireLoopRef.ts","../../src/shared/sdk/models/FireLoop.ts","../../src/shared/sdk/services/core/real.time.ts","../../real.time.js","../../src/shared/sdk/services/custom/User.ts","../../User.js","../../src/shared/sdk/services/custom/Acl.ts","../../Acl.js","../../src/shared/sdk/services/custom/Accesstoken.ts","../../Accesstoken.js","../../src/shared/sdk/services/custom/Rolemapping.ts","../../Rolemapping.js","../../src/shared/sdk/index.ts","../../index.js","../../src/app/app.module.ts","../../src/app/app.module.ngfactory.ts","../../src/app/main.ts","../../src/shared/sdk/services/core/error.service.ts","../../src/shared/sdk/sockets/socket.connections.ts","../../socket.connections.js","../../src/shared/sdk/services/core/base.service.ts","../../base.service.js"],"names":["BaseStorage","prototype","get","key","set","value","expires","remove","InternalStorage","_super","__extends","SDKStorage","SiaphUsercredentialApi","http","connection","models","auth","searchParams","errorHandler","_this","call","this","Object","__WEBPACK_IMPORTED_MODULE_0_tslib__","patchOrCreate","data","customHeaders","_url","__WEBPACK_IMPORTED_MODULE_5__lb_config__","getPath","getApiVersion","request","patchAttributes","id","getModelName","__WEBPACK_IMPORTED_MODULE_4__core_base_service__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_2__angular_http__","__WEBPACK_IMPORTED_MODULE_9__sockets_socket_connections__","__WEBPACK_IMPORTED_MODULE_3__SDKModels__","__WEBPACK_IMPORTED_MODULE_6__core_auth_service__","__WEBPACK_IMPORTED_MODULE_7__core_search_params__","__WEBPACK_IMPORTED_MODULE_8__core_error_service__","_a","_b","_c","_d","_e","_f","SiaphDocumentsApi","getDataDocument","params","SiaphDepthroleApi","SiaphTrackingdocumentsApi","SiaphNoteddocumentsApi","SiaphDocumentslibraryApi","__webpack_require__","d","__webpack_exports__","SocketDriver","connect","url","options","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","keys","module","exports","webpackAsyncContext","ids","map","e","reject","../pages/home/home.module.ngfactory","../pages/kepwal/kepwal.module.ngfactory","../pages/kontak/kontak.module.ngfactory","../pages/login/login.module.ngfactory","../pages/perda/perda.module.ngfactory","../pages/perpus/perpus.module.ngfactory","../pages/perwal/perwal.module.ngfactory","../pages/profil/profil.module.ngfactory","../pages/tracking/dashboard-tracking/account-tracking/account-tracking.module.ngfactory","../pages/tracking/dashboard-tracking/change-password/change-password.module.ngfactory","../pages/tracking/dashboard-tracking/dashboard-tracking.module.ngfactory","../pages/tracking/dashboard-tracking/detail-tracking/detail-tracking.module.ngfactory","../pages/tracking/dashboard-tracking/edit-tracking/edit-tracking.module.ngfactory","../pages/tracking/dashboard-tracking/form-disposisi/form-disposisi.module.ngfactory","../pages/tracking/dashboard-tracking/profile-account-tracking/profile-account-tracking.module.ngfactory","../pages/tracking/people-detail-view/people-detail-view.module.ngfactory","../pages/tracking/tracking.module.ngfactory","../pages/update/update.module.ngfactory","User","assign","factory","getModelDefinition","name","plural","path","properties","realm","type","username","email","emailVerified","password","relations","accessTokens","model","Acl","property","accesstype","permission","principaltype","principalid","Accesstoken","ttl","scopes","created","userid","SDKModels","__WEBPACK_IMPORTED_MODULE_2__models_User__","__WEBPACK_IMPORTED_MODULE_3__models_Acl__","__WEBPACK_IMPORTED_MODULE_4__models_Accesstoken__","Rolemapping","__WEBPACK_IMPORTED_MODULE_5__models_Rolemapping__","SiaphDepthrole","__WEBPACK_IMPORTED_MODULE_6__models_SiaphDepthrole__","SiaphDocuments","__WEBPACK_IMPORTED_MODULE_7__models_SiaphDocuments__","SiaphDocumentslibrary","__WEBPACK_IMPORTED_MODULE_8__models_SiaphDocumentslibrary__","SiaphNoteddocuments","__WEBPACK_IMPORTED_MODULE_9__models_SiaphNoteddocuments__","SiaphTrackingdocuments","__WEBPACK_IMPORTED_MODULE_10__models_SiaphTrackingdocuments__","SiaphUsercredential","__WEBPACK_IMPORTED_MODULE_11__models_SiaphUsercredential__","modelName","getAll","getModelNames","roleid","userRole","nameRole","depthCode","idRole","noDoc","fromDoc","toDoc","dateDoc","noAgendaDoc","subjectDoc","createDateDoc","publishedByDoc","idDoc","namePhoto","idPhoto","idTracking","dateNoted","notesDoc","idNoted","statusDisposisi","prosesDate","editedDate","editedBy","positionDisposisi","statusDoc","latelyDoc","access","idUser","SDKToken","AccessToken","default","userId","user","rememberMe","LoopBackAuth","storage","token","__WEBPACK_IMPORTED_MODULE_3__models_BaseModels__","prefix","load","setRememberMe","setUser","save","setToken","getToken","getAccessTokenId","getCurrentUserId","getCurrentUserData","JSON","parse","today","Date","getTime","persist","prop","clear","forEach","stringify","err","console","error","__WEBPACK_IMPORTED_MODULE_2__storage_storage_swaps__","LoopBackConfig","setApiVersion","version","setBaseURL","setAuthPrefix","authPrefix","getAuthPrefix","setDebugMode","isEnabled","debug","debuggable","filterOnUrl","filterOn","filterOnHeaders","isHeadersFilteringSet","setSecureWebSockets","secure","unsetSecureWebSockets","isSecureWebSocketsSet","setRequestOptionsCredentials","withCredentials","getRequestOptionsCredentials","JSONSearchParams","setJSON","obj","_usp","_JSON2URL","getURLSearchParams","parent","parts","push","_parseParam","join","processedKey","Array","isArray","View_MyApp_0","_l","core_es5","nav_ngfactory","split_pane","nav","view_controller","nav_controller","app","config_config","platform","gesture_controller","transition_controller","deep_linker","dom_controller","root","_ck","_v","component","rootPage","View_TabsPage_0","tabs_ngfactory","tabs","keyboard","tab_ngfactory","tab","tabTitle","tabIcon","_co","tab1Root","tab2Root","tab3Root","tab4Root","_tabId","_btnId","MyApp","statusBar","splashScreen","ready","styleDefault","hide","tslib_es6","templateUrl","ionic_angular","status_bar","splash_screen","TabsPage","logger_service_LoggerService","LoggerService","log","args","_i","arguments","length","lb_config","apply","info","count","arg","group","groupEnd","profile","profileEnd","time","timeEnd","CookieBrowser","cookies","cookie","window","document","split","filter","item","pop","slice","toUTCString","StorageBrowser","localStorage","getItem","setItem","removeItem","socket_browser_SocketBrowser","SocketBrowser","lib","io_service_IO","IO","socket","observables","emit","event","on","subject","Subject","res","next","asObservable","FireLoopRef_FireLoopRef","FireLoopRef","relationship","buildId","childs","disposable","scope","dispose","subscription","operation","subscribe","channel","removeListener","removeAllListeners","unsubscribe","upsert","create","remote","method","broadcast","onRemote","broadcasts","limit","order","instance","match","Rx","merge","pull","stats","make","reference","child","settings","pullNow","that","nowEvent","sbj","channels","announce","resultEvent","setTimeout","sharedObservables","sharedOnDisconnect","complete","catch","throw","now","Math","floor","random","FireLoop_FireLoop","FireLoop","references","ref","real_time_RealTime","RealTime","connecting","onReadySubject","sharedOnReady","share","onDisconnect","onAuthenticated","sharedOnAuthenticated","onUnAuthorized","sharedOnUnAuthorized","onReady","isConnected","to_1","clearTimeout","ti_1","setInterval","clearInterval","s1_1","sharedOnConnect","s2","socket_connections","auth_service","real_time__a","real_time__b","real_time__c","User_UserApi","UserApi","findByIdAccessTokens","fk","destroyByIdAccessTokens","updateByIdAccessTokens","getAccessTokens","_routeParams","_urlParams","createAccessTokens","deleteAccessTokens","countAccessTokens","where","login","credentials","include","_postBody","response","parseInt","logout","access_token","verify","confirm","uid","redirect","resetPassword","changePassword","oldPassword","newPassword","setPassword","createManyAccessTokens","getCurrent","getCachedCurrent","getCurrentToken","isAuthenticated","getCurrentId","base_service","http_es5","search_params","error_service","User__a","User__b","User__c","Acl_AclApi","AclApi","Acl__a","Acl__b","Acl__c","Acl__d","Acl__e","Acl__f","Accesstoken_AccesstokenApi","AccesstokenApi","Accesstoken__a","Accesstoken__b","Accesstoken__c","Accesstoken__d","Accesstoken__e","Accesstoken__f","Rolemapping_RolemappingApi","RolemappingApi","Rolemapping__a","Rolemapping__b","Rolemapping__c","Rolemapping__d","Rolemapping__e","Rolemapping__f","sdk_SDKBrowserModule","SDKBrowserModule_1","SDKBrowserModule","forRoot","internalStorageProvider","provide","storage_swaps","useClass","ngModule","providers","custom_SiaphDepthrole","custom_SiaphDocuments","custom_SiaphDocumentslibrary","custom_SiaphNoteddocuments","custom_SiaphTrackingdocuments","custom_SiaphUsercredential","socket_driver","imports","common_es5","declarations","AppModule","platform_browser_es5","links","loadChildren","segment","priority","defaultHistory","es2015","animations_es5","bootstrap","entryComponents","file_transfer","camera","file_opener","RenderType_MyApp","encapsulation","styles","MyAppNgFactory","RenderType_TabsPage","TabsPageNgFactory","AppModuleNgFactory","app_root","action_sheet_component_ngfactory","alert_component_ngfactory","app_root_ngfactory","loading_component_ngfactory","modal_component_ngfactory","picker_component_ngfactory","popover_component_ngfactory","select_popover_component_ngfactory","toast_component_ngfactory","gesture_config","p0_0","p1_0","p2_0","p2_1","browser_es5","forms_es5","_angular_animations_es5","action_sheet_controller","alert_controller","events","util_form","haptic","loading_controller","ionic_angular_module","url_serializer","module_loader","modal_controller","picker_controller","popover_controller","tap_click","toast_controller","ionic_error_handler","platform_registry","menu_controller","ng_module_loader","p0_1","p3_0","p3_1","p3_2","p3_3","p3_4","p4_0","p4_1","p4_2","p4_3","mode_registry","bootstrapModuleFactory","ErrorHandler","handleError","__WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__","json","SocketConnection","driver","zone","subjects","onConnect","__WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__","authenticated","connected","off","destroy","__WEBPACK_IMPORTED_MODULE_4__lb_config__","forceNew","forceWebsockets","transports","heartbeater","status","handler","run","disconnect","__WEBPACK_IMPORTED_MODULE_2__socket_driver__","BaseLoopBackApi","routeParams","urlParams","postBody","pubsub","replace","RegExp","arr","subject_1","__WEBPACK_IMPORTED_MODULE_8_rxjs_Subject__","headers","append","authenticate","body","postBodyKeys","shift","__WEBPACK_IMPORTED_MODULE_6__lb_config__","encodeURIComponent","search","undefined","text","onCreate","datum","createMany","onCreateMany","findById","find","exists","findOne","updateAll","onUpdateAll","deleteById","onDeleteById","updateAttributes","onUpdateAttributes","onUpsert","upsertPatch","onUpsertPatch","upsertWithWhere","onUpsertWithWhere","replaceOrCreate","onReplaceOrCreate","replaceById","onReplaceById","createChangeStream","EventSource","msg","source","addEventListener","onerror","warn","__WEBPACK_IMPORTED_MODULE_11__sockets_socket_connections__","__WEBPACK_IMPORTED_MODULE_7__custom_SDKModels__","__WEBPACK_IMPORTED_MODULE_5__auth_service__","__WEBPACK_IMPORTED_MODULE_3__search_params__","__WEBPACK_IMPORTED_MODULE_4__error_service__"],"mappings":"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","sourcesContent":["/**\n * @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n * @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n * @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/storage/storage.swaps.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { SiaphUsercredential } from '../../models/SiaphUsercredential';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SiaphUsercredential` model.\n */\n@Injectable()\nexport class SiaphUsercredentialApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphUsercredential` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphUsercredentials\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id SiaphUsercredential id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphUsercredential` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphUsercredentials/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphUsercredential`.\n   */\n  public getModelName() {\n    return \"SiaphUsercredential\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/SiaphUsercredential.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `SiaphUsercredential` model.\n */\nvar SiaphUsercredentialApi = (function (_super) {\n    __extends(SiaphUsercredentialApi, _super);\n    function SiaphUsercredentialApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphUsercredential` object.)\n     * </em>\n     */\n    SiaphUsercredentialApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphUsercredentials\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id SiaphUsercredential id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphUsercredential` object.)\n     * </em>\n     */\n    SiaphUsercredentialApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphUsercredentials/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `SiaphUsercredential`.\n     */\n    SiaphUsercredentialApi.prototype.getModelName = function () {\n        return \"SiaphUsercredential\";\n    };\n    return SiaphUsercredentialApi;\n}(BaseLoopBackApi));\nSiaphUsercredentialApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], SiaphUsercredentialApi);\nexport { SiaphUsercredentialApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=SiaphUsercredential.js.map\n\n\n// WEBPACK FOOTER //\n// SiaphUsercredential.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { SiaphDocuments } from '../../models/SiaphDocuments';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SiaphDocuments` model.\n */\n@Injectable()\nexport class SiaphDocumentsApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphDocuments` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphDocuments\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id SiaphDocuments id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphDocuments` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphDocuments/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `getDataDocument` – `{any}` - \n   */\n  public getDataDocument(params: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphDocuments/getDataDocument\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      params: params\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphDocuments`.\n   */\n  public getModelName() {\n    return \"SiaphDocuments\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/SiaphDocuments.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `SiaphDocuments` model.\n */\nvar SiaphDocumentsApi = (function (_super) {\n    __extends(SiaphDocumentsApi, _super);\n    function SiaphDocumentsApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphDocuments` object.)\n     * </em>\n     */\n    SiaphDocumentsApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphDocuments\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id SiaphDocuments id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphDocuments` object.)\n     * </em>\n     */\n    SiaphDocumentsApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphDocuments/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * <em>\n           * (The remote method definition does not provide any description.)\n           * </em>\n     *\n     * @param {object} data Request data.\n     *\n     * This method expects a subset of model properties as request parameters.\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * Data properties:\n     *\n     *  - `getDataDocument` – `{any}` -\n     */\n    SiaphDocumentsApi.prototype.getDataDocument = function (params, customHeaders) {\n        var _method = \"POST\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphDocuments/getDataDocument\";\n        var _routeParams = {};\n        var _postBody = {\n            params: params\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `SiaphDocuments`.\n     */\n    SiaphDocumentsApi.prototype.getModelName = function () {\n        return \"SiaphDocuments\";\n    };\n    return SiaphDocumentsApi;\n}(BaseLoopBackApi));\nSiaphDocumentsApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], SiaphDocumentsApi);\nexport { SiaphDocumentsApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=SiaphDocuments.js.map\n\n\n// WEBPACK FOOTER //\n// SiaphDocuments.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { SiaphDepthrole } from '../../models/SiaphDepthrole';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SiaphDepthrole` model.\n */\n@Injectable()\nexport class SiaphDepthroleApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphDepthrole` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphDepthroles\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id SiaphDepthrole id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphDepthrole` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphDepthroles/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphDepthrole`.\n   */\n  public getModelName() {\n    return \"SiaphDepthrole\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/SiaphDepthrole.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `SiaphDepthrole` model.\n */\nvar SiaphDepthroleApi = (function (_super) {\n    __extends(SiaphDepthroleApi, _super);\n    function SiaphDepthroleApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphDepthrole` object.)\n     * </em>\n     */\n    SiaphDepthroleApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphDepthroles\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id SiaphDepthrole id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphDepthrole` object.)\n     * </em>\n     */\n    SiaphDepthroleApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphDepthroles/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `SiaphDepthrole`.\n     */\n    SiaphDepthroleApi.prototype.getModelName = function () {\n        return \"SiaphDepthrole\";\n    };\n    return SiaphDepthroleApi;\n}(BaseLoopBackApi));\nSiaphDepthroleApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], SiaphDepthroleApi);\nexport { SiaphDepthroleApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=SiaphDepthrole.js.map\n\n\n// WEBPACK FOOTER //\n// SiaphDepthrole.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { SiaphTrackingdocuments } from '../../models/SiaphTrackingdocuments';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SiaphTrackingdocuments` model.\n */\n@Injectable()\nexport class SiaphTrackingdocumentsApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphTrackingdocuments` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphTrackingdocuments\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id SiaphTrackingdocuments id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphTrackingdocuments` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphTrackingdocuments/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphTrackingdocuments`.\n   */\n  public getModelName() {\n    return \"SiaphTrackingdocuments\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/SiaphTrackingdocuments.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `SiaphTrackingdocuments` model.\n */\nvar SiaphTrackingdocumentsApi = (function (_super) {\n    __extends(SiaphTrackingdocumentsApi, _super);\n    function SiaphTrackingdocumentsApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphTrackingdocuments` object.)\n     * </em>\n     */\n    SiaphTrackingdocumentsApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphTrackingdocuments\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id SiaphTrackingdocuments id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphTrackingdocuments` object.)\n     * </em>\n     */\n    SiaphTrackingdocumentsApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphTrackingdocuments/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `SiaphTrackingdocuments`.\n     */\n    SiaphTrackingdocumentsApi.prototype.getModelName = function () {\n        return \"SiaphTrackingdocuments\";\n    };\n    return SiaphTrackingdocumentsApi;\n}(BaseLoopBackApi));\nSiaphTrackingdocumentsApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], SiaphTrackingdocumentsApi);\nexport { SiaphTrackingdocumentsApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=SiaphTrackingdocuments.js.map\n\n\n// WEBPACK FOOTER //\n// SiaphTrackingdocuments.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { SiaphNoteddocuments } from '../../models/SiaphNoteddocuments';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SiaphNoteddocuments` model.\n */\n@Injectable()\nexport class SiaphNoteddocumentsApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphNoteddocuments` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphNoteddocuments\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id SiaphNoteddocuments id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphNoteddocuments` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphNoteddocuments/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphNoteddocuments`.\n   */\n  public getModelName() {\n    return \"SiaphNoteddocuments\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/SiaphNoteddocuments.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `SiaphNoteddocuments` model.\n */\nvar SiaphNoteddocumentsApi = (function (_super) {\n    __extends(SiaphNoteddocumentsApi, _super);\n    function SiaphNoteddocumentsApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphNoteddocuments` object.)\n     * </em>\n     */\n    SiaphNoteddocumentsApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphNoteddocuments\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id SiaphNoteddocuments id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphNoteddocuments` object.)\n     * </em>\n     */\n    SiaphNoteddocumentsApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphNoteddocuments/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `SiaphNoteddocuments`.\n     */\n    SiaphNoteddocumentsApi.prototype.getModelName = function () {\n        return \"SiaphNoteddocuments\";\n    };\n    return SiaphNoteddocumentsApi;\n}(BaseLoopBackApi));\nSiaphNoteddocumentsApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], SiaphNoteddocumentsApi);\nexport { SiaphNoteddocumentsApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=SiaphNoteddocuments.js.map\n\n\n// WEBPACK FOOTER //\n// SiaphNoteddocuments.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { SiaphDocumentslibrary } from '../../models/SiaphDocumentslibrary';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SiaphDocumentslibrary` model.\n */\n@Injectable()\nexport class SiaphDocumentslibraryApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphDocumentslibrary` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphDocumentslibraries\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id SiaphDocumentslibrary id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiaphDocumentslibrary` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiaphDocumentslibraries/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphDocumentslibrary`.\n   */\n  public getModelName() {\n    return \"SiaphDocumentslibrary\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/SiaphDocumentslibrary.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `SiaphDocumentslibrary` model.\n */\nvar SiaphDocumentslibraryApi = (function (_super) {\n    __extends(SiaphDocumentslibraryApi, _super);\n    function SiaphDocumentslibraryApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphDocumentslibrary` object.)\n     * </em>\n     */\n    SiaphDocumentslibraryApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphDocumentslibraries\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id SiaphDocumentslibrary id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `SiaphDocumentslibrary` object.)\n     * </em>\n     */\n    SiaphDocumentslibraryApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/SiaphDocumentslibraries/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `SiaphDocumentslibrary`.\n     */\n    SiaphDocumentslibraryApi.prototype.getModelName = function () {\n        return \"SiaphDocumentslibrary\";\n    };\n    return SiaphDocumentslibraryApi;\n}(BaseLoopBackApi));\nSiaphDocumentslibraryApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], SiaphDocumentslibraryApi);\nexport { SiaphDocumentslibraryApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=SiaphDocumentslibrary.js.map\n\n\n// WEBPACK FOOTER //\n// SiaphDocumentslibrary.js","/**\n * @module SocketDriver\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SocketDriver class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class SocketDriver {\n  connect(url: any, options: any) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/sockets/socket.driver.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 205;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 205\n// module chunks = 18","var map = {\n\t\"../pages/home/home.module.ngfactory\": [\n\t\t607,\n\t\t5\n\t],\n\t\"../pages/kepwal/kepwal.module.ngfactory\": [\n\t\t608,\n\t\t8\n\t],\n\t\"../pages/kontak/kontak.module.ngfactory\": [\n\t\t609,\n\t\t15\n\t],\n\t\"../pages/login/login.module.ngfactory\": [\n\t\t610,\n\t\t16\n\t],\n\t\"../pages/perda/perda.module.ngfactory\": [\n\t\t611,\n\t\t7\n\t],\n\t\"../pages/perpus/perpus.module.ngfactory\": [\n\t\t612,\n\t\t14\n\t],\n\t\"../pages/perwal/perwal.module.ngfactory\": [\n\t\t613,\n\t\t6\n\t],\n\t\"../pages/profil/profil.module.ngfactory\": [\n\t\t614,\n\t\t13\n\t],\n\t\"../pages/tracking/dashboard-tracking/account-tracking/account-tracking.module.ngfactory\": [\n\t\t615,\n\t\t12\n\t],\n\t\"../pages/tracking/dashboard-tracking/change-password/change-password.module.ngfactory\": [\n\t\t616,\n\t\t2\n\t],\n\t\"../pages/tracking/dashboard-tracking/dashboard-tracking.module.ngfactory\": [\n\t\t617,\n\t\t4\n\t],\n\t\"../pages/tracking/dashboard-tracking/detail-tracking/detail-tracking.module.ngfactory\": [\n\t\t618,\n\t\t0\n\t],\n\t\"../pages/tracking/dashboard-tracking/edit-tracking/edit-tracking.module.ngfactory\": [\n\t\t619,\n\t\t11\n\t],\n\t\"../pages/tracking/dashboard-tracking/form-disposisi/form-disposisi.module.ngfactory\": [\n\t\t620,\n\t\t1\n\t],\n\t\"../pages/tracking/dashboard-tracking/profile-account-tracking/profile-account-tracking.module.ngfactory\": [\n\t\t621,\n\t\t10\n\t],\n\t\"../pages/tracking/people-detail-view/people-detail-view.module.ngfactory\": [\n\t\t622,\n\t\t3\n\t],\n\t\"../pages/tracking/tracking.module.ngfactory\": [\n\t\t623,\n\t\t17\n\t],\n\t\"../pages/update/update.module.ngfactory\": [\n\t\t624,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 229;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 229\n// module chunks = 18","/* tslint:disable */\nimport {\n  AccessToken\n} from '../index';\n\ndeclare var Object: any;\nexport interface UserInterface {\n  \"realm\"?: string;\n  \"username\"?: string;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  \"id\"?: number;\n  \"password\"?: string;\n  accessTokens?: any[];\n}\n\nexport class User implements UserInterface {\n  \"realm\": string;\n  \"username\": string;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  \"id\": number;\n  \"password\": string;\n  accessTokens: any[];\n  constructor(data?: UserInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public static getModelName() {\n    return \"User\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of User for dynamic purposes.\n  **/\n  public static factory(data: UserInterface): User{\n    return new User(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'User',\n      plural: 'Users',\n      path: 'Users',\n      properties: {\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"password\": {\n          name: 'password',\n          type: 'string'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'any[]',\n          model: 'AccessToken'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/User.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface AclInterface {\n  \"model\"?: string;\n  \"property\"?: string;\n  \"accesstype\"?: string;\n  \"permission\"?: string;\n  \"principaltype\"?: string;\n  \"principalid\"?: string;\n  \"id\"?: number;\n}\n\nexport class Acl implements AclInterface {\n  \"model\": string;\n  \"property\": string;\n  \"accesstype\": string;\n  \"permission\": string;\n  \"principaltype\": string;\n  \"principalid\": string;\n  \"id\": number;\n  constructor(data?: AclInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Acl`.\n   */\n  public static getModelName() {\n    return \"Acl\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Acl for dynamic purposes.\n  **/\n  public static factory(data: AclInterface): Acl{\n    return new Acl(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Acl',\n      plural: 'Acls',\n      path: 'Acls',\n      properties: {\n        \"model\": {\n          name: 'model',\n          type: 'string'\n        },\n        \"property\": {\n          name: 'property',\n          type: 'string'\n        },\n        \"accesstype\": {\n          name: 'accesstype',\n          type: 'string'\n        },\n        \"permission\": {\n          name: 'permission',\n          type: 'string'\n        },\n        \"principaltype\": {\n          name: 'principaltype',\n          type: 'string'\n        },\n        \"principalid\": {\n          name: 'principalid',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/Acl.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface AccesstokenInterface {\n  \"id\": string;\n  \"ttl\"?: number;\n  \"scopes\"?: string;\n  \"created\"?: Date;\n  \"userid\"?: number;\n}\n\nexport class Accesstoken implements AccesstokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": string;\n  \"created\": Date;\n  \"userid\": number;\n  constructor(data?: AccesstokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Accesstoken`.\n   */\n  public static getModelName() {\n    return \"Accesstoken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Accesstoken for dynamic purposes.\n  **/\n  public static factory(data: AccesstokenInterface): Accesstoken{\n    return new Accesstoken(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Accesstoken',\n      plural: 'Accesstokens',\n      path: 'Accesstokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number'\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: 'string'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userid\": {\n          name: 'userid',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/Accesstoken.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { User } from '../../models/User';\nimport { Acl } from '../../models/Acl';\nimport { Accesstoken } from '../../models/Accesstoken';\nimport { Rolemapping } from '../../models/Rolemapping';\nimport { SiaphDepthrole } from '../../models/SiaphDepthrole';\nimport { SiaphDocuments } from '../../models/SiaphDocuments';\nimport { SiaphDocumentslibrary } from '../../models/SiaphDocumentslibrary';\nimport { SiaphNoteddocuments } from '../../models/SiaphNoteddocuments';\nimport { SiaphTrackingdocuments } from '../../models/SiaphTrackingdocuments';\nimport { SiaphUsercredential } from '../../models/SiaphUsercredential';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    User: User,\n    Acl: Acl,\n    Accesstoken: Accesstoken,\n    Rolemapping: Rolemapping,\n    SiaphDepthrole: SiaphDepthrole,\n    SiaphDocuments: SiaphDocuments,\n    SiaphDocumentslibrary: SiaphDocumentslibrary,\n    SiaphNoteddocuments: SiaphNoteddocuments,\n    SiaphTrackingdocuments: SiaphTrackingdocuments,\n    SiaphUsercredential: SiaphUsercredential,\n    \n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/SDKModels.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface RolemappingInterface {\n  \"id\": number;\n  \"principaltype\"?: string;\n  \"principalid\"?: string;\n  \"roleid\"?: number;\n}\n\nexport class Rolemapping implements RolemappingInterface {\n  \"id\": number;\n  \"principaltype\": string;\n  \"principalid\": string;\n  \"roleid\": number;\n  constructor(data?: RolemappingInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Rolemapping`.\n   */\n  public static getModelName() {\n    return \"Rolemapping\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Rolemapping for dynamic purposes.\n  **/\n  public static factory(data: RolemappingInterface): Rolemapping{\n    return new Rolemapping(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Rolemapping',\n      plural: 'Rolemappings',\n      path: 'Rolemappings',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"principaltype\": {\n          name: 'principaltype',\n          type: 'string'\n        },\n        \"principalid\": {\n          name: 'principalid',\n          type: 'string'\n        },\n        \"roleid\": {\n          name: 'roleid',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/Rolemapping.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SiaphDepthroleInterface {\n  \"userRole\": string;\n  \"nameRole\": string;\n  \"depthCode\": string;\n  \"idRole\"?: number;\n}\n\nexport class SiaphDepthrole implements SiaphDepthroleInterface {\n  \"userRole\": string;\n  \"nameRole\": string;\n  \"depthCode\": string;\n  \"idRole\": number;\n  constructor(data?: SiaphDepthroleInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphDepthrole`.\n   */\n  public static getModelName() {\n    return \"SiaphDepthrole\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SiaphDepthrole for dynamic purposes.\n  **/\n  public static factory(data: SiaphDepthroleInterface): SiaphDepthrole{\n    return new SiaphDepthrole(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SiaphDepthrole',\n      plural: 'SiaphDepthroles',\n      path: 'SiaphDepthroles',\n      properties: {\n        \"userRole\": {\n          name: 'userRole',\n          type: 'string'\n        },\n        \"nameRole\": {\n          name: 'nameRole',\n          type: 'string'\n        },\n        \"depthCode\": {\n          name: 'depthCode',\n          type: 'string'\n        },\n        \"idRole\": {\n          name: 'idRole',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/SiaphDepthrole.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SiaphDocumentsInterface {\n  \"noDoc\": string;\n  \"fromDoc\": string;\n  \"toDoc\": string;\n  \"dateDoc\": Date;\n  \"noAgendaDoc\": string;\n  \"subjectDoc\": string;\n  \"createDateDoc\": Date;\n  \"publishedByDoc\": string;\n  \"idDoc\"?: number;\n}\n\nexport class SiaphDocuments implements SiaphDocumentsInterface {\n  \"noDoc\": string;\n  \"fromDoc\": string;\n  \"toDoc\": string;\n  \"dateDoc\": Date;\n  \"noAgendaDoc\": string;\n  \"subjectDoc\": string;\n  \"createDateDoc\": Date;\n  \"publishedByDoc\": string;\n  \"idDoc\": number;\n  constructor(data?: SiaphDocumentsInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphDocuments`.\n   */\n  public static getModelName() {\n    return \"SiaphDocuments\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SiaphDocuments for dynamic purposes.\n  **/\n  public static factory(data: SiaphDocumentsInterface): SiaphDocuments{\n    return new SiaphDocuments(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SiaphDocuments',\n      plural: 'SiaphDocuments',\n      path: 'SiaphDocuments',\n      properties: {\n        \"noDoc\": {\n          name: 'noDoc',\n          type: 'string'\n        },\n        \"fromDoc\": {\n          name: 'fromDoc',\n          type: 'string'\n        },\n        \"toDoc\": {\n          name: 'toDoc',\n          type: 'string'\n        },\n        \"dateDoc\": {\n          name: 'dateDoc',\n          type: 'Date'\n        },\n        \"noAgendaDoc\": {\n          name: 'noAgendaDoc',\n          type: 'string'\n        },\n        \"subjectDoc\": {\n          name: 'subjectDoc',\n          type: 'string'\n        },\n        \"createDateDoc\": {\n          name: 'createDateDoc',\n          type: 'Date'\n        },\n        \"publishedByDoc\": {\n          name: 'publishedByDoc',\n          type: 'string'\n        },\n        \"idDoc\": {\n          name: 'idDoc',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/SiaphDocuments.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SiaphDocumentslibraryInterface {\n  \"idDoc\": number;\n  \"namePhoto\": string;\n  \"idPhoto\"?: number;\n}\n\nexport class SiaphDocumentslibrary implements SiaphDocumentslibraryInterface {\n  \"idDoc\": number;\n  \"namePhoto\": string;\n  \"idPhoto\": number;\n  constructor(data?: SiaphDocumentslibraryInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphDocumentslibrary`.\n   */\n  public static getModelName() {\n    return \"SiaphDocumentslibrary\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SiaphDocumentslibrary for dynamic purposes.\n  **/\n  public static factory(data: SiaphDocumentslibraryInterface): SiaphDocumentslibrary{\n    return new SiaphDocumentslibrary(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SiaphDocumentslibrary',\n      plural: 'SiaphDocumentslibraries',\n      path: 'SiaphDocumentslibraries',\n      properties: {\n        \"idDoc\": {\n          name: 'idDoc',\n          type: 'number'\n        },\n        \"namePhoto\": {\n          name: 'namePhoto',\n          type: 'string'\n        },\n        \"idPhoto\": {\n          name: 'idPhoto',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/SiaphDocumentslibrary.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SiaphNoteddocumentsInterface {\n  \"idTracking\": number;\n  \"idDoc\": number;\n  \"dateNoted\": Date;\n  \"notesDoc\": string;\n  \"idNoted\"?: number;\n}\n\nexport class SiaphNoteddocuments implements SiaphNoteddocumentsInterface {\n  \"idTracking\": number;\n  \"idDoc\": number;\n  \"dateNoted\": Date;\n  \"notesDoc\": string;\n  \"idNoted\": number;\n  constructor(data?: SiaphNoteddocumentsInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphNoteddocuments`.\n   */\n  public static getModelName() {\n    return \"SiaphNoteddocuments\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SiaphNoteddocuments for dynamic purposes.\n  **/\n  public static factory(data: SiaphNoteddocumentsInterface): SiaphNoteddocuments{\n    return new SiaphNoteddocuments(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SiaphNoteddocuments',\n      plural: 'SiaphNoteddocuments',\n      path: 'SiaphNoteddocuments',\n      properties: {\n        \"idTracking\": {\n          name: 'idTracking',\n          type: 'number'\n        },\n        \"idDoc\": {\n          name: 'idDoc',\n          type: 'number'\n        },\n        \"dateNoted\": {\n          name: 'dateNoted',\n          type: 'Date'\n        },\n        \"notesDoc\": {\n          name: 'notesDoc',\n          type: 'string'\n        },\n        \"idNoted\": {\n          name: 'idNoted',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/SiaphNoteddocuments.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SiaphTrackingdocumentsInterface {\n  \"statusDisposisi\": string;\n  \"prosesDate\": Date;\n  \"editedDate\": Date;\n  \"editedBy\": string;\n  \"positionDisposisi\"?: string;\n  \"statusDoc\"?: string;\n  \"latelyDoc\"?: string;\n  \"idTracking\"?: number;\n  \"idDoc\"?: number;\n  \"fromDoc\"?: number;\n  \"toDoc\"?: number;\n}\n\nexport class SiaphTrackingdocuments implements SiaphTrackingdocumentsInterface {\n  \"statusDisposisi\": string;\n  \"prosesDate\": Date;\n  \"editedDate\": Date;\n  \"editedBy\": string;\n  \"positionDisposisi\": string;\n  \"statusDoc\": string;\n  \"latelyDoc\": string;\n  \"idTracking\": number;\n  \"idDoc\": number;\n  \"fromDoc\": number;\n  \"toDoc\": number;\n  constructor(data?: SiaphTrackingdocumentsInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphTrackingdocuments`.\n   */\n  public static getModelName() {\n    return \"SiaphTrackingdocuments\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SiaphTrackingdocuments for dynamic purposes.\n  **/\n  public static factory(data: SiaphTrackingdocumentsInterface): SiaphTrackingdocuments{\n    return new SiaphTrackingdocuments(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SiaphTrackingdocuments',\n      plural: 'SiaphTrackingdocuments',\n      path: 'SiaphTrackingdocuments',\n      properties: {\n        \"statusDisposisi\": {\n          name: 'statusDisposisi',\n          type: 'string'\n        },\n        \"prosesDate\": {\n          name: 'prosesDate',\n          type: 'Date'\n        },\n        \"editedDate\": {\n          name: 'editedDate',\n          type: 'Date'\n        },\n        \"editedBy\": {\n          name: 'editedBy',\n          type: 'string'\n        },\n        \"positionDisposisi\": {\n          name: 'positionDisposisi',\n          type: 'string'\n        },\n        \"statusDoc\": {\n          name: 'statusDoc',\n          type: 'string'\n        },\n        \"latelyDoc\": {\n          name: 'latelyDoc',\n          type: 'string'\n        },\n        \"idTracking\": {\n          name: 'idTracking',\n          type: 'number'\n        },\n        \"idDoc\": {\n          name: 'idDoc',\n          type: 'number'\n        },\n        \"fromDoc\": {\n          name: 'fromDoc',\n          type: 'number'\n        },\n        \"toDoc\": {\n          name: 'toDoc',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/SiaphTrackingdocuments.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SiaphUsercredentialInterface {\n  \"username\": string;\n  \"password\": string;\n  \"depthCode\": string;\n  \"access\": string;\n  \"idUser\"?: number;\n}\n\nexport class SiaphUsercredential implements SiaphUsercredentialInterface {\n  \"username\": string;\n  \"password\": string;\n  \"depthCode\": string;\n  \"access\": string;\n  \"idUser\": number;\n  constructor(data?: SiaphUsercredentialInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiaphUsercredential`.\n   */\n  public static getModelName() {\n    return \"SiaphUsercredential\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SiaphUsercredential for dynamic purposes.\n  **/\n  public static factory(data: SiaphUsercredentialInterface): SiaphUsercredential{\n    return new SiaphUsercredential(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SiaphUsercredential',\n      plural: 'SiaphUsercredentials',\n      path: 'SiaphUsercredentials',\n      properties: {\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"password\": {\n          name: 'password',\n          type: 'string'\n        },\n        \"depthCode\": {\n          name: 'depthCode',\n          type: 'string'\n        },\n        \"access\": {\n          name: 'access',\n          type: 'string'\n        },\n        \"idUser\": {\n          name: 'idUser',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/SiaphUsercredential.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/BaseModels.ts","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign(this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n    if (this.token.rememberMe) {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        expires\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/core/auth.service.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\nvar LoopBackAuth = (function () {\n    /**\n     * @method constructor\n     * @param {InternalStorage} storage Internal Storage Driver\n     * @description\n     * The constructor will initialize the token loading data from storage\n     **/\n    function LoopBackAuth(storage) {\n        this.storage = storage;\n        /**\n         * @type {SDKToken}\n         **/\n        this.token = new SDKToken();\n        /**\n         * @type {string}\n         **/\n        this.prefix = '$LoopBackSDK$';\n        this.token.id = this.load('id');\n        this.token.user = this.load('user');\n        this.token.userId = this.load('userId');\n        this.token.created = this.load('created');\n        this.token.ttl = this.load('ttl');\n        this.token.rememberMe = this.load('rememberMe');\n    }\n    /**\n     * @method setRememberMe\n     * @param {boolean} value Flag to remember credentials\n     * @return {void}\n     * @description\n     * This method will set a flag in order to remember the current credentials\n     **/\n    LoopBackAuth.prototype.setRememberMe = function (value) {\n        this.token.rememberMe = value;\n    };\n    /**\n     * @method setUser\n     * @param {any} user Any type of user model\n     * @return {void}\n     * @description\n     * This method will update the user information and persist it if the\n     * rememberMe flag is set.\n     **/\n    LoopBackAuth.prototype.setUser = function (user) {\n        this.token.user = user;\n        this.save();\n    };\n    /**\n     * @method setToken\n     * @param {SDKToken} token SDKToken or casted AccessToken instance\n     * @return {void}\n     * @description\n     * This method will set a flag in order to remember the current credentials\n     **/\n    LoopBackAuth.prototype.setToken = function (token) {\n        this.token = Object.assign(this.token, token);\n        this.save();\n    };\n    /**\n     * @method getToken\n     * @return {void}\n     * @description\n     * This method will set a flag in order to remember the current credentials.\n     **/\n    LoopBackAuth.prototype.getToken = function () {\n        return this.token;\n    };\n    /**\n     * @method getAccessTokenId\n     * @return {string}\n     * @description\n     * This method will return the actual token string, not the object instance.\n     **/\n    LoopBackAuth.prototype.getAccessTokenId = function () {\n        return this.token.id;\n    };\n    /**\n     * @method getCurrentUserId\n     * @return {any}\n     * @description\n     * This method will return the current user id, it can be number or string.\n     **/\n    LoopBackAuth.prototype.getCurrentUserId = function () {\n        return this.token.userId;\n    };\n    /**\n     * @method getCurrentUserData\n     * @return {any}\n     * @description\n     * This method will return the current user instance.\n     **/\n    LoopBackAuth.prototype.getCurrentUserData = function () {\n        return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n    };\n    /**\n     * @method save\n     * @return {boolean} Whether or not the information was saved\n     * @description\n     * This method will save in either local storage or cookies the current credentials.\n     * But only if rememberMe is enabled.\n     **/\n    LoopBackAuth.prototype.save = function () {\n        if (this.token.rememberMe) {\n            var today = new Date();\n            var expires = new Date(today.getTime() + (this.token.ttl * 1000));\n            this.persist('id', this.token.id, expires);\n            this.persist('user', this.token.user, expires);\n            this.persist('userId', this.token.userId, expires);\n            this.persist('created', this.token.created, expires);\n            this.persist('ttl', this.token.ttl, expires);\n            this.persist('rememberMe', this.token.rememberMe, expires);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    /**\n     * @method load\n     * @param {string} prop Property name\n     * @return {any} Any information persisted in storage\n     * @description\n     * This method will load either from local storage or cookies the provided property.\n     **/\n    LoopBackAuth.prototype.load = function (prop) {\n        return this.storage.get(\"\" + this.prefix + prop);\n    };\n    /**\n     * @method clear\n     * @return {void}\n     * @description\n     * This method will clear cookies or the local storage.\n     **/\n    LoopBackAuth.prototype.clear = function () {\n        var _this = this;\n        Object.keys(this.token).forEach(function (prop) { return _this.storage.remove(\"\" + _this.prefix + prop); });\n        this.token = new SDKToken();\n    };\n    /**\n     * @method persist\n     * @return {void}\n     * @description\n     * This method saves values to storage\n     **/\n    LoopBackAuth.prototype.persist = function (prop, value, expires) {\n        try {\n            this.storage.set(\"\" + this.prefix + prop, (typeof value === 'object') ? JSON.stringify(value) : value, expires);\n        }\n        catch (err) {\n            console.error('Cannot access local/session storage:', err);\n        }\n    };\n    return LoopBackAuth;\n}());\nLoopBackAuth = __decorate([\n    Injectable(),\n    __param(0, Inject(InternalStorage)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof InternalStorage !== \"undefined\" && InternalStorage) === \"function\" && _a || Object])\n], LoopBackAuth);\nexport { LoopBackAuth };\nvar _a;\n//# sourceMappingURL=auth.service.js.map\n\n\n// WEBPACK FOOTER //\n// auth.service.js","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//172.16.8.119:3001';\n  private static version: string | number = 'api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/lb.config.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { URLSearchParams } from '@angular/http';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module JSONSearchParams\n* @license MIT\n* @description\n* JSON Parser and Wrapper for the Angular2 URLSearchParams\n* This module correctly encodes a json object into a query string and then creates\n* an instance of the URLSearchParams component for later use in HTTP Calls\n**/\n@Injectable()\nexport class JSONSearchParams {\n\n    private _usp: URLSearchParams;\n\n    public setJSON(obj: any) {\n        this._usp = new URLSearchParams(this._JSON2URL(obj, false));\n    }\n\n    public getURLSearchParams(): URLSearchParams {\n        return this._usp;\n    }\n\n    private _JSON2URL(obj: any, parent: any) {\n        var parts: any = [];\n        for (var key in obj)\n        parts.push(this._parseParam(key, obj[key], parent));\n        return parts.join('&');\n    }\n\n    private _parseParam(key: string, value: any, parent: string) {\n        let processedKey = parent ? parent + '[' + key + ']' : key;\n        if (value && (<string>(typeof value) === 'object' || Array.isArray(value))) {\n            return this._JSON2URL(value, processedKey);\n        }\n        return processedKey + '=' + value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/core/search.params.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as i0 from '@angular/core';\nimport * as i1 from '../../node_modules/ionic-angular/components/nav/nav.ngfactory';\nimport * as i2 from 'ionic-angular/components/split-pane/split-pane';\nimport * as i3 from 'ionic-angular/components/nav/nav';\nimport * as i4 from 'ionic-angular/navigation/view-controller';\nimport * as i5 from 'ionic-angular/navigation/nav-controller';\nimport * as i6 from 'ionic-angular/components/app/app';\nimport * as i7 from 'ionic-angular/config/config';\nimport * as i8 from 'ionic-angular/platform/platform';\nimport * as i9 from 'ionic-angular/gestures/gesture-controller';\nimport * as i10 from 'ionic-angular/transitions/transition-controller';\nimport * as i11 from 'ionic-angular/navigation/deep-linker';\nimport * as i12 from 'ionic-angular/platform/dom-controller';\nimport * as i13 from './app.component';\nimport * as i14 from '@ionic-native/status-bar/index';\nimport * as i15 from '@ionic-native/splash-screen/index';\nconst styles_MyApp:any[] = ([] as any[]);\nexport const RenderType_MyApp:i0.RendererType2 = i0.ɵcrt({encapsulation:2,styles:styles_MyApp,\n    data:{}});\nexport function View_MyApp_0(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),2,'ion-nav',([] as any[]),\n      (null as any),(null as any),(null as any),i1.View_Nav_0,i1.RenderType_Nav)),\n      i0.ɵprd(6144,(null as any),i2.RootNode,(null as any),[i3.Nav]),i0.ɵdid(4374528,\n          (null as any),0,i3.Nav,[[2,i4.ViewController],[2,i5.NavController],i6.App,\n              i7.Config,i8.Platform,i0.ElementRef,i0.NgZone,i0.Renderer,i0.ComponentFactoryResolver,\n              i9.GestureController,i10.TransitionController,[2,i11.DeepLinker],i12.DomController,\n              i0.ErrorHandler],{root:[0,'root']},(null as any)),(_l()(),i0.ɵted((null as any),\n          ['\\n']))],(_ck,_v) => {\n    var _co:i13.MyApp = _v.component;\n    const currVal_0:any = _co.rootPage;\n    _ck(_v,2,0,currVal_0);\n  },(null as any));\n}\nexport function View_MyApp_Host_0(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),1,'ng-component',\n      ([] as any[]),(null as any),(null as any),(null as any),View_MyApp_0,RenderType_MyApp)),\n      i0.ɵdid(49152,(null as any),0,i13.MyApp,[i8.Platform,i14.StatusBar,i15.SplashScreen],\n          (null as any),(null as any))],(null as any),(null as any));\n}\nexport const MyAppNgFactory:i0.ComponentFactory<i13.MyApp> = i0.ɵccf('ng-component',\n    i13.MyApp,View_MyApp_Host_0,{},{},([] as any[]));\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3JlbmR5L0RvY3VtZW50cy9SRU5EWS9BV0Qvc2lhcGgtYXBwL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9Vc2Vycy9yZW5keS9Eb2N1bWVudHMvUkVORFkvQVdEL3NpYXBoLWFwcC9zcmMvYXBwL2FwcC5jb21wb25lbnQudHMiLCJuZzovLy9Vc2Vycy9yZW5keS9Eb2N1bWVudHMvUkVORFkvQVdEL3NpYXBoLWFwcC9zcmMvYXBwL2FwcC5odG1sIiwibmc6Ly8vVXNlcnMvcmVuZHkvRG9jdW1lbnRzL1JFTkRZL0FXRC9zaWFwaC1hcHAvc3JjL2FwcC9hcHAuY29tcG9uZW50LnRzLk15QXBwX0hvc3QuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyIgIiwiPGlvbi1uYXYgW3Jvb3RdPVwicm9vdFBhZ2VcIj48L2lvbi1uYXY+XG4iLCI8bmctY29tcG9uZW50PjwvbmctY29tcG9uZW50PiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JDQUE7TUFBQTthQUFBLCtEQUFBO1VBQUE7OzREQUFBOzZCQUFBLG1DQUFxQztVQUFBOztJQUE1QjtJQUFULFdBQVMsU0FBVDs7OztvQkNBQTtNQUFBO2FBQUE7VUFBQTs7OyJ9\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ngfactory.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as i0 from '@angular/core';\nimport * as i1 from '../../../node_modules/ionic-angular/components/tabs/tabs.ngfactory';\nimport * as i2 from 'ionic-angular/components/split-pane/split-pane';\nimport * as i3 from 'ionic-angular/components/tabs/tabs';\nimport * as i4 from 'ionic-angular/navigation/nav-controller';\nimport * as i5 from 'ionic-angular/navigation/view-controller';\nimport * as i6 from 'ionic-angular/components/app/app';\nimport * as i7 from 'ionic-angular/config/config';\nimport * as i8 from 'ionic-angular/platform/platform';\nimport * as i9 from 'ionic-angular/navigation/deep-linker';\nimport * as i10 from 'ionic-angular/platform/keyboard';\nimport * as i11 from '../../../node_modules/ionic-angular/components/tabs/tab.ngfactory';\nimport * as i12 from 'ionic-angular/components/tabs/tab';\nimport * as i13 from 'ionic-angular/gestures/gesture-controller';\nimport * as i14 from 'ionic-angular/transitions/transition-controller';\nimport * as i15 from 'ionic-angular/platform/dom-controller';\nimport * as i16 from './tabs';\nconst styles_TabsPage:any[] = ([] as any[]);\nexport const RenderType_TabsPage:i0.RendererType2 = i0.ɵcrt({encapsulation:2,styles:styles_TabsPage,\n    data:{}});\nexport function View_TabsPage_0(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),15,'ion-tabs',([] as any[]),\n      (null as any),(null as any),(null as any),i1.View_Tabs_0,i1.RenderType_Tabs)),\n      i0.ɵprd(6144,(null as any),i2.RootNode,(null as any),[i3.Tabs]),i0.ɵdid(4374528,\n          (null as any),0,i3.Tabs,[[2,i4.NavController],[2,i5.ViewController],i6.App,\n              i7.Config,i0.ElementRef,i8.Platform,i0.Renderer,i9.DeepLinker,i10.Keyboard],\n          (null as any),(null as any)),(_l()(),i0.ɵted(0,['\\n    '])),(_l()(),i0.ɵeld(0,\n          (null as any),0,1,'ion-tab',[['role','tabpanel'],['tabIcon','Dashboard'],\n              ['tabTitle','Home']],[[1,'id',0],[1,'aria-labelledby',0]],(null as any),\n          (null as any),i11.View_Tab_0,i11.RenderType_Tab)),i0.ɵdid(245760,(null as any),\n          0,i12.Tab,[i3.Tabs,i6.App,i7.Config,i8.Platform,i0.ElementRef,i0.NgZone,\n              i0.Renderer,i0.ComponentFactoryResolver,i0.ChangeDetectorRef,i13.GestureController,\n              i14.TransitionController,[2,i9.DeepLinker],i15.DomController,i0.ErrorHandler],\n          {root:[0,'root'],tabTitle:[1,'tabTitle'],tabIcon:[2,'tabIcon']},(null as any)),\n      (_l()(),i0.ɵted(0,['\\n    '])),(_l()(),i0.ɵeld(0,(null as any),0,1,'ion-tab',\n          [['role','tabpanel'],['tabIcon','Manage Account'],['tabTitle','About']],\n          [[1,'id',0],[1,'aria-labelledby',0]],(null as any),(null as any),i11.View_Tab_0,\n          i11.RenderType_Tab)),i0.ɵdid(245760,(null as any),0,i12.Tab,[i3.Tabs,i6.App,\n          i7.Config,i8.Platform,i0.ElementRef,i0.NgZone,i0.Renderer,i0.ComponentFactoryResolver,\n          i0.ChangeDetectorRef,i13.GestureController,i14.TransitionController,[2,i9.DeepLinker],\n          i15.DomController,i0.ErrorHandler],{root:[0,'root'],tabTitle:[1,'tabTitle'],\n          tabIcon:[2,'tabIcon']},(null as any)),(_l()(),i0.ɵted(0,['\\n    '])),(_l()(),\n          i0.ɵeld(0,(null as any),0,1,'ion-tab',[['role','tabpanel'],['tabIcon','Tracking'],\n              ['tabTitle','Contact']],[[1,'id',0],[1,'aria-labelledby',0]],(null as any),\n              (null as any),i11.View_Tab_0,i11.RenderType_Tab)),i0.ɵdid(245760,(null as any),\n          0,i12.Tab,[i3.Tabs,i6.App,i7.Config,i8.Platform,i0.ElementRef,i0.NgZone,\n              i0.Renderer,i0.ComponentFactoryResolver,i0.ChangeDetectorRef,i13.GestureController,\n              i14.TransitionController,[2,i9.DeepLinker],i15.DomController,i0.ErrorHandler],\n          {root:[0,'root'],tabTitle:[1,'tabTitle'],tabIcon:[2,'tabIcon']},(null as any)),\n      (_l()(),i0.ɵted(0,['\\n    '])),(_l()(),i0.ɵeld(0,(null as any),0,1,'ion-tab',\n          [['role','tabpanel'],['tabIcon','Profile'],['tabTitle','Contact']],[[1,'id',\n              0],[1,'aria-labelledby',0]],(null as any),(null as any),i11.View_Tab_0,\n          i11.RenderType_Tab)),i0.ɵdid(245760,(null as any),0,i12.Tab,[i3.Tabs,i6.App,\n          i7.Config,i8.Platform,i0.ElementRef,i0.NgZone,i0.Renderer,i0.ComponentFactoryResolver,\n          i0.ChangeDetectorRef,i13.GestureController,i14.TransitionController,[2,i9.DeepLinker],\n          i15.DomController,i0.ErrorHandler],{root:[0,'root'],tabTitle:[1,'tabTitle'],\n          tabIcon:[2,'tabIcon']},(null as any)),(_l()(),i0.ɵted(0,['\\n']))],(_ck,_v) => {\n    var _co:i16.TabsPage = _v.component;\n    const currVal_2:any = _co.tab1Root;\n    const currVal_3:any = 'Home';\n    const currVal_4:any = 'Dashboard';\n    _ck(_v,5,0,currVal_2,currVal_3,currVal_4);\n    const currVal_7:any = _co.tab2Root;\n    const currVal_8:any = 'About';\n    const currVal_9:any = 'Manage Account';\n    _ck(_v,8,0,currVal_7,currVal_8,currVal_9);\n    const currVal_12:any = _co.tab3Root;\n    const currVal_13:any = 'Contact';\n    const currVal_14:any = 'Tracking';\n    _ck(_v,11,0,currVal_12,currVal_13,currVal_14);\n    const currVal_17:any = _co.tab4Root;\n    const currVal_18:any = 'Contact';\n    const currVal_19:any = 'Profile';\n    _ck(_v,14,0,currVal_17,currVal_18,currVal_19);\n  },(_ck,_v) => {\n    const currVal_0:any = i0.ɵnov(_v,5)._tabId;\n    const currVal_1:any = i0.ɵnov(_v,5)._btnId;\n    _ck(_v,4,0,currVal_0,currVal_1);\n    const currVal_5:any = i0.ɵnov(_v,8)._tabId;\n    const currVal_6:any = i0.ɵnov(_v,8)._btnId;\n    _ck(_v,7,0,currVal_5,currVal_6);\n    const currVal_10:any = i0.ɵnov(_v,11)._tabId;\n    const currVal_11:any = i0.ɵnov(_v,11)._btnId;\n    _ck(_v,10,0,currVal_10,currVal_11);\n    const currVal_15:any = i0.ɵnov(_v,14)._tabId;\n    const currVal_16:any = i0.ɵnov(_v,14)._btnId;\n    _ck(_v,13,0,currVal_15,currVal_16);\n  });\n}\nexport function View_TabsPage_Host_0(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),1,'ng-component',\n      ([] as any[]),(null as any),(null as any),(null as any),View_TabsPage_0,RenderType_TabsPage)),\n      i0.ɵdid(49152,(null as any),0,i16.TabsPage,([] as any[]),(null as any),(null as any))],\n      (null as any),(null as any));\n}\nexport const TabsPageNgFactory:i0.ComponentFactory<i16.TabsPage> = i0.ɵccf('ng-component',\n    i16.TabsPage,View_TabsPage_Host_0,{},{},([] as any[]));\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3JlbmR5L0RvY3VtZW50cy9SRU5EWS9BV0Qvc2lhcGgtYXBwL3NyYy9wYWdlcy90YWJzL3RhYnMubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvcmVuZHkvRG9jdW1lbnRzL1JFTkRZL0FXRC9zaWFwaC1hcHAvc3JjL3BhZ2VzL3RhYnMvdGFicy50cyIsIm5nOi8vL1VzZXJzL3JlbmR5L0RvY3VtZW50cy9SRU5EWS9BV0Qvc2lhcGgtYXBwL3NyYy9wYWdlcy90YWJzL3RhYnMuaHRtbCIsIm5nOi8vL1VzZXJzL3JlbmR5L0RvY3VtZW50cy9SRU5EWS9BV0Qvc2lhcGgtYXBwL3NyYy9wYWdlcy90YWJzL3RhYnMudHMuVGFic1BhZ2VfSG9zdC5odG1sIl0sInNvdXJjZXNDb250ZW50IjpbIiAiLCI8aW9uLXRhYnM+XG4gICAgPGlvbi10YWIgW3Jvb3RdPVwidGFiMVJvb3RcIiB0YWJUaXRsZT1cIkhvbWVcIiB0YWJJY29uPVwiRGFzaGJvYXJkXCI+PC9pb24tdGFiPlxuICAgIDxpb24tdGFiIFtyb290XT1cInRhYjJSb290XCIgdGFiVGl0bGU9XCJBYm91dFwiIHRhYkljb249XCJNYW5hZ2UgQWNjb3VudFwiPjwvaW9uLXRhYj5cbiAgICA8aW9uLXRhYiBbcm9vdF09XCJ0YWIzUm9vdFwiIHRhYlRpdGxlPVwiQ29udGFjdFwiIHRhYkljb249XCJUcmFja2luZ1wiPjwvaW9uLXRhYj5cbiAgICA8aW9uLXRhYiBbcm9vdF09XCJ0YWI0Um9vdFwiIHRhYlRpdGxlPVwiQ29udGFjdFwiIHRhYkljb249XCJQcm9maWxlXCI+PC9pb24tdGFiPlxuPC9pb24tdGFicz4iLCI8bmctY29tcG9uZW50PjwvbmctY29tcG9uZW50PiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQ0FBO01BQUE7YUFBQSxnRUFBQTtVQUFBO3dGQUFBO1VBQUEsNkJBQVUsK0JBQ047VUFBQTtjQUFBO1VBQUEseURBQUE7VUFBQTs7dUNBQUE7VUFBQTtNQUF5RSwrQkFDekU7VUFBQTtVQUFBOzRCQUFBLFVBQUE7OzhFQUFBOzJDQUFBO1VBQUEsc0NBQStFLCtCQUMvRTtpQkFBQTtjQUFBO2NBQUEseURBQUE7VUFBQTs7dUNBQUE7VUFBQTtNQUEyRSwrQkFDM0U7VUFBQTtjQUFBOzRCQUFBLFVBQUE7OzhFQUFBOzJDQUFBO1VBQUEsc0NBQTBFOztJQUhqRTtJQUFrQjtJQUFnQjtJQUEzQyxXQUFTLFVBQWtCLFVBQWdCLFNBQTNDO0lBQ1M7SUFBa0I7SUFBaUI7SUFBNUMsV0FBUyxVQUFrQixVQUFpQixTQUE1QztJQUNTO0lBQWtCO0lBQW1CO0lBQTlDLFlBQVMsV0FBa0IsV0FBbUIsVUFBOUM7SUFDUztJQUFrQjtJQUFtQjtJQUE5QyxZQUFTLFdBQWtCLFdBQW1CLFVBQTlDOztJQUhBO0lBQUE7SUFBQSxXQUFBLG1CQUFBO0lBQ0E7SUFBQTtJQUFBLFdBQUEsbUJBQUE7SUFDQTtJQUFBO0lBQUEsWUFBQSxxQkFBQTtJQUNBO0lBQUE7SUFBQSxZQUFBLHFCQUFBOzs7O29CQ0pKO01BQUE7YUFBQTs7OzsifQ==\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ngfactory.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = 'HomePage';\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nvar MyApp = (function () {\n    function MyApp(platform, statusBar, splashScreen) {\n        this.rootPage = 'HomePage';\n        platform.ready().then(function () {\n            // Okay, so the platform is ready and our plugins are available.\n            // Here you can do any higher level native things you might need.\n            statusBar.styleDefault();\n            splashScreen.hide();\n        });\n    }\n    return MyApp;\n}());\nMyApp = __decorate([\n    Component({\n        templateUrl: 'app.html'\n    }),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Platform !== \"undefined\" && Platform) === \"function\" && _a || Object, typeof (_b = typeof StatusBar !== \"undefined\" && StatusBar) === \"function\" && _b || Object, typeof (_c = typeof SplashScreen !== \"undefined\" && SplashScreen) === \"function\" && _c || Object])\n], MyApp);\nexport { MyApp };\nvar _a, _b, _c;\n//# sourceMappingURL=app.component.js.map\n\n\n// WEBPACK FOOTER //\n// app.component.js","import { Component } from '@angular/core';\n\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = 'DashboardTrackingPage';\n  tab2Root = 'AccountTrackingPage';\n  tab3Root = 'ListTrackingPage';\n  tab4Root = 'ProfileAccountTrackingPage';\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nvar TabsPage = (function () {\n    function TabsPage() {\n        this.tab1Root = 'DashboardTrackingPage';\n        this.tab2Root = 'AccountTrackingPage';\n        this.tab3Root = 'ListTrackingPage';\n        this.tab4Root = 'ProfileAccountTrackingPage';\n    }\n    return TabsPage;\n}());\nTabsPage = __decorate([\n    Component({\n        templateUrl: 'tabs.html'\n    }),\n    __metadata(\"design:paramtypes\", [])\n], TabsPage);\nexport { TabsPage };\n//# sourceMappingURL=tabs.js.map\n\n\n// WEBPACK FOOTER //\n// tabs.js","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/logger.service.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\nvar LoggerService = (function () {\n    function LoggerService() {\n    }\n    LoggerService.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (LoopBackConfig.debuggable())\n            console.log.apply(console, args);\n    };\n    LoggerService.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (LoopBackConfig.debuggable())\n            console.info.apply(console, args);\n    };\n    LoggerService.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (LoopBackConfig.debuggable())\n            console.error.apply(console, args);\n    };\n    LoggerService.prototype.count = function (arg) {\n        if (LoopBackConfig.debuggable())\n            console.count(arg);\n    };\n    LoggerService.prototype.group = function (arg) {\n        if (LoopBackConfig.debuggable())\n            console.count(arg);\n    };\n    LoggerService.prototype.groupEnd = function () {\n        if (LoopBackConfig.debuggable())\n            console.groupEnd();\n    };\n    LoggerService.prototype.profile = function (arg) {\n        if (LoopBackConfig.debuggable())\n            console.count(arg);\n    };\n    LoggerService.prototype.profileEnd = function () {\n        if (LoopBackConfig.debuggable())\n            console.profileEnd();\n    };\n    LoggerService.prototype.time = function (arg) {\n        if (LoopBackConfig.debuggable())\n            console.time(arg);\n    };\n    LoggerService.prototype.timeEnd = function (arg) {\n        if (LoopBackConfig.debuggable())\n            console.timeEnd(arg);\n    };\n    return LoggerService;\n}());\nLoggerService = __decorate([\n    Injectable()\n], LoggerService);\nexport { LoggerService };\n//# sourceMappingURL=logger.service.js.map\n\n\n// WEBPACK FOOTER //\n// logger.service.js","import { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${value}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/storage/cookie.browser.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/storage/storage.browser.ts","/* tslint:disable */\nimport * as io from 'socket.io-client';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketBrowser\n* @license MIT\n* @description\n* This module handle socket connections for web browsers, it will be DI Swapped\n* depending on the platform environment.\n* This module will be generated when the -d ng2web flag is set\n**/\nexport class SocketBrowser {\n  /**\n   * @method connect\n   * @param {string} url URL path to connect with the server.\n   * @param {any} options Any socket.io v1 =< valid options\n   * @return {any} Not currently a socket.io-client for web Typings implemented.\n   * @description\n   * This method will return a valid socket connection.  \n   **/\n  connect(url: string, options: any): any {\n    return io(url, options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/sockets/socket.browser.ts","import { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nexport class IO {\n\n  private socket: any;\n  private observables: any = {};\n\n  constructor(socket: any) { this.socket = socket; }\n\n  emit(event: string, data: any): void {\n    this.socket.emit('ME:RT:1://event', {\n        event : event,\n        data  : data\n    });\n  }\n\n  on(event: string): Observable<any> {\n    if (this.observables[event]) { return this.observables[event]; }\n    let subject: Subject<any> = new Subject<any>();\n    this.socket.on(event, (res: any) => subject.next(res));\n    this.observables[event] = subject.asObservable();\n    return this.observables[event];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/core/io.service.ts","import { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { LoopBackFilter, StatFilter } from './index';\nimport { SocketConnection } from '../sockets/socket.connections';\n/**\n * @class FireLoopRef<T>\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * This class allows to create FireLoop References which will be in sync with\n * Server. It also allows to create FireLoop Reference Childs, that allows to\n * persist data according the generic model relationships.\n **/\nexport class FireLoopRef<T> {\n  // Reference ID\n  private id: number = this.buildId();\n  // Model Instance (For child references, empty on root references)\n  private instance: any;\n  // Model Childs\n  private childs: any = {};\n  // Disposable Events\n  private disposable: { [key: string]: any } = {};\n  /**\n  * @method constructor\n  * @param {any} model The model we want to create a reference\n  * @param {SocketConnection} socket Socket connection to handle events\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\n  * @param {string} relationship The defined model relationship\n  * @description\n  * The constructor will receive the required parameters and then will register this reference\n  * into the server, needed to allow multiple references for the same model.\n  * This ids are referenced into this specific client connection and won't have issues\n  * with other client ids.\n  **/\n  constructor(\n    private model: any,\n    private socket: SocketConnection,\n    private parent: FireLoopRef<any> = null,\n    private relationship: string = null\n  ) {\n    this.socket.emit(\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\n    );\n    return this;\n  }\n  /**\n  * @method dispose\n  * @return {void}\n  * @description\n  * This method is super important to avoid memory leaks in the server.\n  * This method requires to be called on components destroy\n  *\n  * ngOnDestroy() {\n  *  this.someRef.dispose() \n  * }\n  **/\n  public dispose(): void {\n    const subscription = this.operation('dispose', {}).subscribe(() => {\n      Object.keys(this.disposable).forEach((channel: string) => {\n        this.socket.removeListener(channel, this.disposable[channel]);\n        this.socket.removeAllListeners(channel);\n      });\n      subscription.unsubscribe();\n    });\n  }\n  /**\n  * @method upsert\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for upsert function.\n  **/\n  public upsert(data: T): Observable<T> {\n    return this.operation('upsert', data);\n  }\n  /**\n  * @method create\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for create function.\n  **/\n  public create(data: T): Observable<T> {\n    return this.operation('create', data);\n  }\n  /**\n  * @method remove\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for remove function.\n  **/\n  public remove(data: T): Observable<T> {\n    return this.operation('remove', data);\n  }\n  /**\n  * @method remote\n  * @param {string} method Remote method name\n  * @param {any[]=} params Parameters to be applied into the remote method\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\n  * @return {Observable<any>}\n  * @description\n  * This method calls for any remote method. It is flexible enough to\n  * allow you call either built-in or custom remote methods.\n  *\n  * FireLoop provides this interface to enable calling remote methods\n  * but also to optionally send any defined accept params that will be\n  * applied within the server.\n  **/\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\n    return this.operation('remote', { method, params, broadcast });\n  }\n  /**\n  * @method onRemote\n  * @param {string} method Remote method name\n  * @return {Observable<any>}\n  * @description\n  * This method listen for public broadcasted remote method results. If the remote method\n  * execution is not public only the owner will receive the result data.\n  **/\n  public onRemote(method: string): Observable<any> {\n    let event: string = 'remote';\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n    }\n    return this.broadcasts(event, {});\n  }\n  /**\n  * @method on\n  * @param {string} event Event name\n  * @param {LoopBackFilter} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for different type of events. Valid events are:\n  *   - change (Triggers on any model change -create, update, remove-)\n  *   - value (Triggers on new entries)\n  *   - child_added (Triggers when a child is added)\n  *   - child_updated (Triggers when a child is updated)\n  *   - child_removed (Triggers when a child is removed)\n  **/\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\n    if (event === 'remote') {\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\n    }\n    let request: any;\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n      request = { filter };\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n      request = { filter, parent: this.parent.instance };\n    }\n    if (event.match(/(value|change|stats)/)) {\n      return Observable.merge(\n        this.pull(event, request),\n        this.broadcasts(event, request)\n      );\n    } else {\n      return this.broadcasts(event, request);\n    }\n  }\n  /**\n  * @method stats\n  * @param {LoopBackFilter=} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for real-time statistics, will trigger on every\n  * statistic modification.\n  * TIP: You can improve performance by adding memcached to LoopBack models.\n  **/\n  public stats(filter?: StatFilter): Observable<T | T[]> {\n    return this.on('stats', filter);\n  }\n  /**\n  * @method make\n  * @param {any} instance Persisted model instance reference\n  * @return {Observable<T>}\n  * @description\n  * This method will set a model instance into this a new FireLoop Reference.\n  * This allows to persiste parentship when creating related instances.\n  *\n  * It also allows to have multiple different persisted instance references to same model.\n  * otherwise if using singleton will replace a previous instance for a new instance, when\n  * we actually want to have more than 1 instance of same model.\n  **/\n  public make(instance: any): FireLoopRef<T> {\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\n    reference.instance = instance;\n    return reference;\n  }\n  /**\n  * @method child\n  * @param {string} relationship A defined model relationship\n  * @return {FireLoopRef<T>}\n  * @description\n  * This method creates child references, which will persist related model\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\n  **/\n  public child<T>(relationship: string): FireLoopRef<T> {\n    // Return singleton instance\n    if (this.childs[relationship]) { return this.childs[relationship]; }\n    // Try to get relation settings from current model\n    let settings: any = this.model.getModelDefinition().relations[relationship];\n    // Verify the relationship actually exists\n    if (!settings) {\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\n    }\n    // Verify if the relationship model is public\n    if (settings.model === '') {\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\n    }\n    // Lets get a model reference and add a reference for all of the models\n    let model: any = this.model.models.get(settings.model);\n    model.models = this.model.models;\n    // If everything goes well, we will store a child reference and return it.\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\n    return this.childs[relationship];\n  }\n  /**\n  * @method pull\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This method will pull initial data from server\n  **/\n  private pull(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let that: FireLoopRef<T> = this;\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\n    function pullNow(data: any) {\n      if (that.socket.removeListener) {\n        that.socket.removeListener(nowEvent, pullNow);\n      }\n      sbj.next(data);\n    };\n    this.socket.on(nowEvent, pullNow);\n    return sbj.asObservable();\n  }\n  /**\n  * @method broadcasts\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This will listen for public broadcasts announces and then request\n  * for data according a specific client request, not shared with other clients.\n  **/\n  private broadcasts(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let channels: { announce: string, broadcast: string } = {\n      announce: `${event}.broadcast.announce.${this.id}`,\n      broadcast: `${event}.broadcast.${this.id}`\n    };\n    let that = this;\n    // Announces Handler\n    this.disposable[channels.announce] = function (res: T) {\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\n    };\n    // Broadcasts Handler\n    this.disposable[channels.broadcast] = function (data: any) {\n      sbj.next(data);\n    };\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\n    return sbj.asObservable();\n  }\n  /**\n  * @method operation\n  * @param {string} event Event name\n  * @param {any} data Any type of data sent to the server\n  * @return {Observable<T>}\n  * @description\n  * This internal method will run operations depending on current context \n  **/\n  private operation(event: string, data: any): Observable<T> {\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\n    }\n    let subject: Subject<T> = new Subject<T>();\n    let config: { data: any, parent: any } = {\n      data,\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\n    };\n    this.socket.emit(event, config);\n    let resultEvent: string = '';\n    if (!this.relationship) {\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\n    } else {\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\n    }\n    this.socket.on(resultEvent, (res: any) => {\n      if (res.error) {\n        subject.error(res);\n      } else {\n        subject.next(res);\n      }\n    });\n    if (event.match('dispose')) {\n      setTimeout(() => subject.next());\n    }\n    // This event listener will be wiped within socket.connections\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\n    return subject.asObservable().catch((error: any) => Observable.throw(error));\n  }\n  /**\n  * @method buildId\n  * @return {number}\n  * @description\n  * This internal method build an ID for this reference, this allows to have\n  * multiple references for the same model or relationships.\n  **/\n  private buildId(): number {\n    return Date.now() + Math.floor(Math.random() * 100800) *\n      Math.floor(Math.random() * 100700) *\n      Math.floor(Math.random() * 198500);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/FireLoopRef.ts","import { FireLoopRef } from './index';\n\nexport class FireLoop {\n\n  private references: any = {};\n\n  constructor(private socket: any, private models: { get: Function }) {}\n\n  public ref<T>(model: any): FireLoopRef<T> {\n    let name: string = model.getModelName();\n    model.models = this.models;\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\n    return this.references[name];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/models/FireLoop.ts","import { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Rx';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\n@Injectable()\nexport class RealTime {\n  public IO: IO;\n  public FireLoop: FireLoop;\n  private connecting: boolean = false;\n  private onReadySubject: Subject<string> = new Subject<string>();\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().share();\n  /**\n  * @method constructor\n  * @param {SocketConnection} connection WebSocket connection service\n  * @param {SDKModels} models Model provider service\n  * @param {LoopBackAuth} auth LoopBack authentication service\n  * @description\n  * It will intialize the shared on ready communication channel.\n  **/\n  constructor(\n    @Inject(SocketConnection) public connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\n  ) {\n    this.sharedOnReady.subscribe();\n  }\n  /**\n  * @method onDisconnect\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is disconnected from server.\n  **/\n  onDisconnect(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnDisconnect;\n  }\n  /**\n  * @method onAuthenticated\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is authenticated with the server.\n  **/\n  onAuthenticated(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnAuthenticated;\n  }\n  /**\n  * @method onUnAuthorized\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\n  **/\n  onUnAuthorized(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\n  }\n  /**\n  * @method onReady\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is Ready for broadcasting.\n  * and will register connection flow events to notify subscribers.\n  **/\n  public onReady(): Observable<any> {\n    // If there is a valid connection, then we just send back to the EventLoop\n    // Or next will be executed before the actual subscription.\n    if (this.connection.isConnected()) {\n      let to = setTimeout(() => {\n        this.onReadySubject.next('shared-connection');\n        clearTimeout(to);\n      });\n    // Else if there is a current attempt of connection we wait for the prior\n    // process that started the connection flow.\n    } else if (this.connecting) {\n      let ti = setInterval(() => {\n        if (this.connection.isConnected()) {\n          this.onReadySubject.next('shared-connection');\n          clearInterval(ti);\n        }\n      }, 500);\n    // If there is not valid connection or attempt, then we start the connection flow\n    // and make sure we notify all the onReady subscribers when done.\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\n    // Memory leaks and duplicated triggered events.\n    } else {\n      this.connecting = true;\n      this.connection.connect(this.auth.getToken());\n      this.IO       = new IO(this.connection);\n      this.FireLoop = new FireLoop(this.connection, this.models);\n      // Fire event for those subscribed \n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\n        console.log('Real-Time connection has been established');\n        this.connecting = false;\n        this.onReadySubject.next('connected');\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\n          s1.unsubscribe();\n          s2.unsubscribe();\n        });\n      });\n    }\n    return this.sharedOnReady;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/core/real.time.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Subject } from 'rxjs/Subject';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\nvar RealTime = (function () {\n    /**\n    * @method constructor\n    * @param {SocketConnection} connection WebSocket connection service\n    * @param {SDKModels} models Model provider service\n    * @param {LoopBackAuth} auth LoopBack authentication service\n    * @description\n    * It will intialize the shared on ready communication channel.\n    **/\n    function RealTime(connection, models, auth) {\n        this.connection = connection;\n        this.models = models;\n        this.auth = auth;\n        this.connecting = false;\n        this.onReadySubject = new Subject();\n        this.sharedOnReady = this.onReadySubject.asObservable().share();\n        this.sharedOnReady.subscribe();\n    }\n    /**\n    * @method onDisconnect\n    * @return {Observable<any>}\n    * @description\n    * Will trigger when Real-Time Service is disconnected from server.\n    **/\n    RealTime.prototype.onDisconnect = function () {\n        return this.connection.sharedObservables.sharedOnDisconnect;\n    };\n    /**\n    * @method onAuthenticated\n    * @return {Observable<any>}\n    * @description\n    * Will trigger when Real-Time Service is authenticated with the server.\n    **/\n    RealTime.prototype.onAuthenticated = function () {\n        return this.connection.sharedObservables.sharedOnAuthenticated;\n    };\n    /**\n    * @method onUnAuthorized\n    * @return {Observable<any>}\n    * @description\n    * Will trigger when Real-Time Service is not authorized to connect with the server.\n    **/\n    RealTime.prototype.onUnAuthorized = function () {\n        return this.connection.sharedObservables.sharedOnUnAuthorized;\n    };\n    /**\n    * @method onReady\n    * @return {Observable<any>}\n    * @description\n    * Will trigger when Real-Time Service is Ready for broadcasting.\n    * and will register connection flow events to notify subscribers.\n    **/\n    RealTime.prototype.onReady = function () {\n        var _this = this;\n        // If there is a valid connection, then we just send back to the EventLoop\n        // Or next will be executed before the actual subscription.\n        if (this.connection.isConnected()) {\n            var to_1 = setTimeout(function () {\n                _this.onReadySubject.next('shared-connection');\n                clearTimeout(to_1);\n            });\n            // Else if there is a current attempt of connection we wait for the prior\n            // process that started the connection flow.\n        }\n        else if (this.connecting) {\n            var ti_1 = setInterval(function () {\n                if (_this.connection.isConnected()) {\n                    _this.onReadySubject.next('shared-connection');\n                    clearInterval(ti_1);\n                }\n            }, 500);\n            // If there is not valid connection or attempt, then we start the connection flow\n            // and make sure we notify all the onReady subscribers when done.\n            // Also it will listen for desconnections so we unsubscribe and avoid both:\n            // Memory leaks and duplicated triggered events.\n        }\n        else {\n            this.connecting = true;\n            this.connection.connect(this.auth.getToken());\n            this.IO = new IO(this.connection);\n            this.FireLoop = new FireLoop(this.connection, this.models);\n            // Fire event for those subscribed \n            var s1_1 = this.connection.sharedObservables.sharedOnConnect.subscribe(function () {\n                console.log('Real-Time connection has been established');\n                _this.connecting = false;\n                _this.onReadySubject.next('connected');\n                var s2 = _this.connection.sharedObservables.sharedOnDisconnect.subscribe(function () {\n                    s1_1.unsubscribe();\n                    s2.unsubscribe();\n                });\n            });\n        }\n        return this.sharedOnReady;\n    };\n    return RealTime;\n}());\nRealTime = __decorate([\n    Injectable(),\n    __param(0, Inject(SocketConnection)),\n    __param(1, Inject(SDKModels)),\n    __param(2, Inject(LoopBackAuth)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _a || Object, typeof (_b = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _b || Object, typeof (_c = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _c || Object])\n], RealTime);\nexport { RealTime };\nvar _a, _b, _c;\n//# sourceMappingURL=real.time.js.map\n\n\n// WEBPACK FOOTER //\n// real.time.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, SDKToken, AccessToken } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { User } from '../../models/User';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `User` model.\n */\n@Injectable()\nexport class UserApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public findByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public updateByIdAccessTokens(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public getAccessTokens(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createAccessTokens(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteAccessTokens(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countAccessTokens(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *   Default value: `user`.\n   *\n   *  - `rememberMe` - `boolean` - Whether the authentication credentials\n   *     should be remembered in localStorage across app/browser restarts.\n   *     Default: `true`.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = 'user', rememberMe: boolean = true, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders)\n      .map(\n        (response: any) => {\n          response.ttl = parseInt(response.ttl);\n          response.rememberMe = rememberMe;\n          this.auth.setToken(response);\n          return response;\n        }\n      );\n      return result;\n      \n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n       _urlParams.access_token = this.auth.getAccessTokenId();\n    this.auth.clear(); \n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Trigger user's identity verification with configured verifyOptions\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public verify(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/verify\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Confirm a user registration with identity verification token.\n   *\n   * @param {string} uid \n   *\n   * @param {string} token \n   *\n   * @param {string} redirect \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public confirm(uid: any, token: any, redirect: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/confirm\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof uid !== 'undefined' && uid !== null) _urlParams.uid = uid;\n    if (typeof token !== 'undefined' && token !== null) _urlParams.token = token;\n    if (typeof redirect !== 'undefined' && redirect !== null) _urlParams.redirect = redirect;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset password for a user with email.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public resetPassword(options: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Change a user's password.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `oldPassword` – `{string}` - \n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public changePassword(oldPassword: any, newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/change-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset user's password via a password-reset token.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public setPassword(newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createManyAccessTokens(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n  /**\n   * @ngdoc method\n   * @name sdk.User#getCurrent\n   * @methodOf sdk.User\n   *\n   * @description\n   *\n   * Get data of the currently logged user. Fail with HTTP result 401\n   * when there is no user logged in.\n   *\n   * @returns object An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   */\n  public getCurrent(filter: LoopBackFilter = {}): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/Users\" + \"/:id\";\n    let id: any = this.auth.getCurrentUserId();\n    if (id == null)\n    id = '__anonymous__';\n    let _routeParams: any = { id: id };\n    let _urlParams: any = {};\n    let _postBody: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request(_method, _url, _routeParams, _urlParams, _postBody);\n  }\n  /**\n   * Get data of the currently logged user that was returned by the last\n   * call to {@link sdk.User#login} or\n   * {@link sdk.User#getCurrent}. Return null when there\n   * is no user logged in or the data of the current user were not fetched\n   * yet.\n   *\n   * @returns object An Account instance.\n   */\n  public getCachedCurrent() {\n    return this.auth.getCurrentUserData();\n  }\n  /**\n   * Get data of the currently logged access tokern that was returned by the last\n   * call to {@link sdk.User#login}\n   *\n   * @returns object An AccessToken instance.\n   */\n  public getCurrentToken(): AccessToken {\n    return this.auth.getToken();\n  }\n  /**\n   * @name sdk.User#isAuthenticated\n   *\n   * @returns {boolean} True if the current user is authenticated (logged in).\n   */\n  public isAuthenticated() {\n    return !(this.getCurrentId() === '' || this.getCurrentId() == null || this.getCurrentId() == 'null');\n  }\n\n  /**\n   * @name sdk.User#getCurrentId\n   *\n   * @returns object Id of the currently logged-in user or null.\n   */\n  public getCurrentId() {\n    return this.auth.getCurrentUserId();\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public getModelName() {\n    return \"User\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/User.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `User` model.\n */\nvar UserApi = (function (_super) {\n    __extends(UserApi, _super);\n    function UserApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Find a related item by id for accessTokens.\n     *\n     * @param {any} id User id\n     *\n     * @param {any} fk Foreign key for accessTokens\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `User` object.)\n     * </em>\n     */\n    UserApi.prototype.findByIdAccessTokens = function (id, fk, customHeaders) {\n        var _method = \"GET\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id/accessTokens/:fk\";\n        var _routeParams = {\n            id: id,\n            fk: fk\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Delete a related item by id for accessTokens.\n     *\n     * @param {any} id User id\n     *\n     * @param {any} fk Foreign key for accessTokens\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * This method returns no data.\n     */\n    UserApi.prototype.destroyByIdAccessTokens = function (id, fk, customHeaders) {\n        var _method = \"DELETE\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id/accessTokens/:fk\";\n        var _routeParams = {\n            id: id,\n            fk: fk\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Update a related item by id for accessTokens.\n     *\n     * @param {any} id User id\n     *\n     * @param {any} fk Foreign key for accessTokens\n     *\n     * @param {object} data Request data.\n     *\n     * This method expects a subset of model properties as request parameters.\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `User` object.)\n     * </em>\n     */\n    UserApi.prototype.updateByIdAccessTokens = function (id, fk, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PUT\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id/accessTokens/:fk\";\n        var _routeParams = {\n            id: id,\n            fk: fk\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Queries accessTokens of User.\n     *\n     * @param {any} id User id\n     *\n     * @param {object} filter\n     *\n     * @returns {object[]} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `User` object.)\n     * </em>\n     */\n    UserApi.prototype.getAccessTokens = function (id, filter, customHeaders) {\n        if (filter === void 0) { filter = {}; }\n        var _method = \"GET\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id/accessTokens\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        if (typeof filter !== 'undefined' && filter !== null)\n            _urlParams.filter = filter;\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Creates a new instance in accessTokens of this model.\n     *\n     * @param {any} id User id\n     *\n     * @param {object} data Request data.\n     *\n     * This method expects a subset of model properties as request parameters.\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `User` object.)\n     * </em>\n     */\n    UserApi.prototype.createAccessTokens = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"POST\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id/accessTokens\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Deletes all accessTokens of this model.\n     *\n     * @param {any} id User id\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * This method returns no data.\n     */\n    UserApi.prototype.deleteAccessTokens = function (id, customHeaders) {\n        var _method = \"DELETE\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id/accessTokens\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Counts accessTokens of User.\n     *\n     * @param {any} id User id\n     *\n     * @param {object} where Criteria to match model instances\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * Data properties:\n     *\n     *  - `count` – `{number}` -\n     */\n    UserApi.prototype.countAccessTokens = function (id, where, customHeaders) {\n        if (where === void 0) { where = {}; }\n        var _method = \"GET\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id/accessTokens/count\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        if (typeof where !== 'undefined' && where !== null)\n            _urlParams.where = where;\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `User` object.)\n     * </em>\n     */\n    UserApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id User id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `User` object.)\n     * </em>\n     */\n    UserApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Login a user with username/email and password.\n     *\n     * @param {string} include Related objects to include in the response. See the description of return value for more details.\n     *   Default value: `user`.\n     *\n     *  - `rememberMe` - `boolean` - Whether the authentication credentials\n     *     should be remembered in localStorage across app/browser restarts.\n     *     Default: `true`.\n     *\n     * @param {object} data Request data.\n     *\n     * This method expects a subset of model properties as request parameters.\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * The response body contains properties of the AccessToken created on login.\n     * Depending on the value of `include` parameter, the body may contain additional properties:\n     *\n     *   - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n     *\n     *\n     */\n    UserApi.prototype.login = function (credentials, include, rememberMe, customHeaders) {\n        var _this = this;\n        if (include === void 0) { include = 'user'; }\n        if (rememberMe === void 0) { rememberMe = true; }\n        var _method = \"POST\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/login\";\n        var _routeParams = {};\n        var _postBody = {\n            credentials: credentials\n        };\n        var _urlParams = {};\n        if (typeof include !== 'undefined' && include !== null)\n            _urlParams.include = include;\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders)\n            .map(function (response) {\n            response.ttl = parseInt(response.ttl);\n            response.rememberMe = rememberMe;\n            _this.auth.setToken(response);\n            return response;\n        });\n        return result;\n    };\n    /**\n     * Logout a user with access token.\n     *\n     * @param {object} data Request data.\n     *\n     * This method does not accept any data. Supply an empty object.\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * This method returns no data.\n     */\n    UserApi.prototype.logout = function (customHeaders) {\n        var _method = \"POST\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/logout\";\n        var _routeParams = {};\n        var _postBody = {};\n        var _urlParams = {};\n        _urlParams.access_token = this.auth.getAccessTokenId();\n        this.auth.clear();\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Trigger user's identity verification with configured verifyOptions\n     *\n     * @param {any} id User id\n     *\n     * @param {object} data Request data.\n     *\n     * This method does not accept any data. Supply an empty object.\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * This method returns no data.\n     */\n    UserApi.prototype.verify = function (id, customHeaders) {\n        var _method = \"POST\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id/verify\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Confirm a user registration with identity verification token.\n     *\n     * @param {string} uid\n     *\n     * @param {string} token\n     *\n     * @param {string} redirect\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * This method returns no data.\n     */\n    UserApi.prototype.confirm = function (uid, token, redirect, customHeaders) {\n        if (redirect === void 0) { redirect = {}; }\n        var _method = \"GET\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/confirm\";\n        var _routeParams = {};\n        var _postBody = {};\n        var _urlParams = {};\n        if (typeof uid !== 'undefined' && uid !== null)\n            _urlParams.uid = uid;\n        if (typeof token !== 'undefined' && token !== null)\n            _urlParams.token = token;\n        if (typeof redirect !== 'undefined' && redirect !== null)\n            _urlParams.redirect = redirect;\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Reset password for a user with email.\n     *\n     * @param {object} data Request data.\n     *\n     * This method expects a subset of model properties as request parameters.\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * This method returns no data.\n     */\n    UserApi.prototype.resetPassword = function (options, customHeaders) {\n        var _method = \"POST\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/reset\";\n        var _routeParams = {};\n        var _postBody = {\n            options: options\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Change a user's password.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `oldPassword` – `{string}` -\n     *\n     *  - `newPassword` – `{string}` -\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * This method returns no data.\n     */\n    UserApi.prototype.changePassword = function (oldPassword, newPassword, customHeaders) {\n        var _method = \"POST\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/change-password\";\n        var _routeParams = {};\n        var _postBody = {\n            data: {\n                oldPassword: oldPassword,\n                newPassword: newPassword\n            }\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Reset user's password via a password-reset token.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `newPassword` – `{string}` -\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * This method returns no data.\n     */\n    UserApi.prototype.setPassword = function (newPassword, customHeaders) {\n        var _method = \"POST\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/reset-password\";\n        var _routeParams = {};\n        var _postBody = {\n            data: {\n                newPassword: newPassword\n            }\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Creates a new instance in accessTokens of this model.\n     *\n     * @param {any} id User id\n     *\n     * @param {object} data Request data.\n     *\n     * This method expects a subset of model properties as request parameters.\n     *\n     * @returns {object[]} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `User` object.)\n     * </em>\n     */\n    UserApi.prototype.createManyAccessTokens = function (id, data, customHeaders) {\n        if (data === void 0) { data = []; }\n        var _method = \"POST\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Users/:id/accessTokens\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * @ngdoc method\n     * @name sdk.User#getCurrent\n     * @methodOf sdk.User\n     *\n     * @description\n     *\n     * Get data of the currently logged user. Fail with HTTP result 401\n     * when there is no user logged in.\n     *\n     * @returns object An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     */\n    UserApi.prototype.getCurrent = function (filter) {\n        if (filter === void 0) { filter = {}; }\n        var _method = \"GET\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/Users\" + \"/:id\";\n        var id = this.auth.getCurrentUserId();\n        if (id == null)\n            id = '__anonymous__';\n        var _routeParams = { id: id };\n        var _urlParams = {};\n        var _postBody = {};\n        if (filter)\n            _urlParams.filter = filter;\n        return this.request(_method, _url, _routeParams, _urlParams, _postBody);\n    };\n    /**\n     * Get data of the currently logged user that was returned by the last\n     * call to {@link sdk.User#login} or\n     * {@link sdk.User#getCurrent}. Return null when there\n     * is no user logged in or the data of the current user were not fetched\n     * yet.\n     *\n     * @returns object An Account instance.\n     */\n    UserApi.prototype.getCachedCurrent = function () {\n        return this.auth.getCurrentUserData();\n    };\n    /**\n     * Get data of the currently logged access tokern that was returned by the last\n     * call to {@link sdk.User#login}\n     *\n     * @returns object An AccessToken instance.\n     */\n    UserApi.prototype.getCurrentToken = function () {\n        return this.auth.getToken();\n    };\n    /**\n     * @name sdk.User#isAuthenticated\n     *\n     * @returns {boolean} True if the current user is authenticated (logged in).\n     */\n    UserApi.prototype.isAuthenticated = function () {\n        return !(this.getCurrentId() === '' || this.getCurrentId() == null || this.getCurrentId() == 'null');\n    };\n    /**\n     * @name sdk.User#getCurrentId\n     *\n     * @returns object Id of the currently logged-in user or null.\n     */\n    UserApi.prototype.getCurrentId = function () {\n        return this.auth.getCurrentUserId();\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `User`.\n     */\n    UserApi.prototype.getModelName = function () {\n        return \"User\";\n    };\n    return UserApi;\n}(BaseLoopBackApi));\nUserApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], UserApi);\nexport { UserApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=User.js.map\n\n\n// WEBPACK FOOTER //\n// User.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Acl } from '../../models/Acl';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Acl` model.\n */\n@Injectable()\nexport class AclApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Acl` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Acls\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Acl id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Acl` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Acls/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Acl`.\n   */\n  public getModelName() {\n    return \"Acl\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/Acl.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `Acl` model.\n */\nvar AclApi = (function (_super) {\n    __extends(AclApi, _super);\n    function AclApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `Acl` object.)\n     * </em>\n     */\n    AclApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Acls\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id Acl id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `Acl` object.)\n     * </em>\n     */\n    AclApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Acls/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `Acl`.\n     */\n    AclApi.prototype.getModelName = function () {\n        return \"Acl\";\n    };\n    return AclApi;\n}(BaseLoopBackApi));\nAclApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], AclApi);\nexport { AclApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=Acl.js.map\n\n\n// WEBPACK FOOTER //\n// Acl.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Accesstoken } from '../../models/Accesstoken';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Accesstoken` model.\n */\n@Injectable()\nexport class AccesstokenApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Accesstoken` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Accesstokens\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Accesstoken id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Accesstoken` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Accesstokens/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Accesstoken`.\n   */\n  public getModelName() {\n    return \"Accesstoken\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/Accesstoken.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `Accesstoken` model.\n */\nvar AccesstokenApi = (function (_super) {\n    __extends(AccesstokenApi, _super);\n    function AccesstokenApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `Accesstoken` object.)\n     * </em>\n     */\n    AccesstokenApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Accesstokens\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id Accesstoken id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `Accesstoken` object.)\n     * </em>\n     */\n    AccesstokenApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Accesstokens/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `Accesstoken`.\n     */\n    AccesstokenApi.prototype.getModelName = function () {\n        return \"Accesstoken\";\n    };\n    return AccesstokenApi;\n}(BaseLoopBackApi));\nAccesstokenApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], AccesstokenApi);\nexport { AccesstokenApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=Accesstoken.js.map\n\n\n// WEBPACK FOOTER //\n// Accesstoken.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Rolemapping } from '../../models/Rolemapping';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Rolemapping` model.\n */\n@Injectable()\nexport class RolemappingApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Rolemapping` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Rolemappings\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Rolemapping id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Rolemapping` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Rolemappings/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Rolemapping`.\n   */\n  public getModelName() {\n    return \"Rolemapping\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/custom/Rolemapping.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n * Api services for the `Rolemapping` model.\n */\nvar RolemappingApi = (function (_super) {\n    __extends(RolemappingApi, _super);\n    function RolemappingApi(http, connection, models, auth, searchParams, errorHandler) {\n        var _this = _super.call(this, http, connection, models, auth, searchParams, errorHandler) || this;\n        _this.http = http;\n        _this.connection = connection;\n        _this.models = models;\n        _this.auth = auth;\n        _this.searchParams = searchParams;\n        _this.errorHandler = errorHandler;\n        return _this;\n    }\n    /**\n     * Patch an existing model instance or insert a new one into the data source.\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - Model instance data\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `Rolemapping` object.)\n     * </em>\n     */\n    RolemappingApi.prototype.patchOrCreate = function (data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Rolemappings\";\n        var _routeParams = {};\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * Patch attributes for a model instance and persist it into the data source.\n     *\n     * @param {any} id Rolemapping id\n     *\n     * @param {object} data Request data.\n     *\n     *  - `data` – `{object}` - An object of model property name/value pairs\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `Rolemapping` object.)\n     * </em>\n     */\n    RolemappingApi.prototype.patchAttributes = function (id, data, customHeaders) {\n        if (data === void 0) { data = {}; }\n        var _method = \"PATCH\";\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n            \"/Rolemappings/:id\";\n        var _routeParams = {\n            id: id\n        };\n        var _postBody = {\n            data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n    };\n    /**\n     * The name of the model represented by this $resource,\n     * i.e. `Rolemapping`.\n     */\n    RolemappingApi.prototype.getModelName = function () {\n        return \"Rolemapping\";\n    };\n    return RolemappingApi;\n}(BaseLoopBackApi));\nRolemappingApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], RolemappingApi);\nexport { RolemappingApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=Rolemapping.js.map\n\n\n// WEBPACK FOOTER //\n// Rolemapping.js","/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root \n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { JSONSearchParams } from './services/core/search.params';\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpModule } from '@angular/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { SocketBrowser } from './sockets/socket.browser';\nimport { SocketDriver } from './sockets/socket.driver';\nimport { SocketConnection } from './sockets/socket.connections';\nimport { RealTime } from './services/core/real.time';\nimport { UserApi } from './services/custom/User';\nimport { AclApi } from './services/custom/Acl';\nimport { AccesstokenApi } from './services/custom/Accesstoken';\nimport { RolemappingApi } from './services/custom/Rolemapping';\nimport { SiaphDepthroleApi } from './services/custom/SiaphDepthrole';\nimport { SiaphDocumentsApi } from './services/custom/SiaphDocuments';\nimport { SiaphDocumentslibraryApi } from './services/custom/SiaphDocumentslibrary';\nimport { SiaphNoteddocumentsApi } from './services/custom/SiaphNoteddocuments';\nimport { SiaphTrackingdocumentsApi } from './services/custom/SiaphTrackingdocuments';\nimport { SiaphUsercredentialApi } from './services/custom/SiaphUsercredential';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports:      [ CommonModule, HttpModule ],\n  declarations: [ ],\n  exports:      [ ],\n  providers:    [\n    ErrorHandler,\n    SocketConnection\n  ]\n})\nexport class SDKBrowserModule {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule  : SDKBrowserModule,\n      providers : [\n        LoopBackAuth,\n        LoggerService,\n        JSONSearchParams,\n        SDKModels,\n        RealTime,\n        UserApi,\n        AclApi,\n        AccesstokenApi,\n        RolemappingApi,\n        SiaphDepthroleApi,\n        SiaphDocumentsApi,\n        SiaphDocumentslibraryApi,\n        SiaphNoteddocumentsApi,\n        SiaphTrackingdocumentsApi,\n        SiaphUsercredentialApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser },\n        { provide: SocketDriver, useClass: SocketBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/index.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root\n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { JSONSearchParams } from './services/core/search.params';\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpModule } from '@angular/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { SocketBrowser } from './sockets/socket.browser';\nimport { SocketDriver } from './sockets/socket.driver';\nimport { SocketConnection } from './sockets/socket.connections';\nimport { RealTime } from './services/core/real.time';\nimport { UserApi } from './services/custom/User';\nimport { AclApi } from './services/custom/Acl';\nimport { AccesstokenApi } from './services/custom/Accesstoken';\nimport { RolemappingApi } from './services/custom/Rolemapping';\nimport { SiaphDepthroleApi } from './services/custom/SiaphDepthrole';\nimport { SiaphDocumentsApi } from './services/custom/SiaphDocuments';\nimport { SiaphDocumentslibraryApi } from './services/custom/SiaphDocumentslibrary';\nimport { SiaphNoteddocumentsApi } from './services/custom/SiaphNoteddocuments';\nimport { SiaphTrackingdocumentsApi } from './services/custom/SiaphTrackingdocuments';\nimport { SiaphUsercredentialApi } from './services/custom/SiaphUsercredential';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\nvar SDKBrowserModule = SDKBrowserModule_1 = (function () {\n    function SDKBrowserModule() {\n    }\n    SDKBrowserModule.forRoot = function (internalStorageProvider) {\n        if (internalStorageProvider === void 0) { internalStorageProvider = {\n            provide: InternalStorage,\n            useClass: CookieBrowser\n        }; }\n        return {\n            ngModule: SDKBrowserModule_1,\n            providers: [\n                LoopBackAuth,\n                LoggerService,\n                JSONSearchParams,\n                SDKModels,\n                RealTime,\n                UserApi,\n                AclApi,\n                AccesstokenApi,\n                RolemappingApi,\n                SiaphDepthroleApi,\n                SiaphDocumentsApi,\n                SiaphDocumentslibraryApi,\n                SiaphNoteddocumentsApi,\n                SiaphTrackingdocumentsApi,\n                SiaphUsercredentialApi,\n                internalStorageProvider,\n                { provide: SDKStorage, useClass: StorageBrowser },\n                { provide: SocketDriver, useClass: SocketBrowser }\n            ]\n        };\n    };\n    return SDKBrowserModule;\n}());\nSDKBrowserModule = SDKBrowserModule_1 = __decorate([\n    NgModule({\n        imports: [CommonModule, HttpModule],\n        declarations: [],\n        exports: [],\n        providers: [\n            ErrorHandler,\n            SocketConnection\n        ]\n    })\n], SDKBrowserModule);\nexport { SDKBrowserModule };\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\nvar SDKBrowserModule_1;\n//# sourceMappingURL=index.js.map\n\n\n// WEBPACK FOOTER //\n// index.js","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpModule } from '@angular/http';\nimport { FileTransfer } from '@ionic-native/file-transfer';\nimport { FileOpener } from '@ionic-native/file-opener';\n\nimport { MyApp } from './app.component';\nimport { TabsPage } from '../pages/tabs/tabs';\n\n\nimport { SDKBrowserModule } from '../shared/sdk/index';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Camera } from '@ionic-native/camera';\n\n\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    TabsPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/home/home.module.ngfactory#AccountPageModuleNgFactory', name: 'HomePage', segment: 'home', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/kepwal/kepwal.module.ngfactory#KepwalPageModuleNgFactory', name: 'KepwalPage', segment: 'kepwal', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/kontak/kontak.module.ngfactory#KontakPageModuleNgFactory', name: 'KontakPage', segment: 'kontak', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/login/login.module.ngfactory#LoginPageModuleNgFactory', name: 'LoginPage', segment: 'login', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/perda/perda.module.ngfactory#PerdaPageModuleNgFactory', name: 'PerdaPage', segment: 'perda', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/perpus/perpus.module.ngfactory#PerpusPageModuleNgFactory', name: 'PerpusPage', segment: 'perpus', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/perwal/perwal.module.ngfactory#PerwalPageModuleNgFactory', name: 'PerwalPage', segment: 'perwal', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/profil/profil.module.ngfactory#ProfilPageModuleNgFactory', name: 'ProfilPage', segment: 'profil', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tracking/dashboard-tracking/account-tracking/account-tracking.module.ngfactory#AccountTrackingPageModuleNgFactory', name: 'AccountTrackingPage', segment: 'account-tracking', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tracking/dashboard-tracking/change-password/change-password.module.ngfactory#ChangePasswordPageModuleNgFactory', name: 'ChangePasswordPage', segment: 'change-password', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tracking/dashboard-tracking/dashboard-tracking.module.ngfactory#DashboardTrackingPageModuleNgFactory', name: 'DashboardTrackingPage', segment: 'dashboard-tracking', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tracking/dashboard-tracking/detail-tracking/detail-tracking.module.ngfactory#DetailTrackingPageModuleNgFactory', name: 'DetailTrackingPage', segment: 'detail-tracking', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tracking/dashboard-tracking/edit-tracking/edit-tracking.module.ngfactory#EditTrackingPageModuleNgFactory', name: 'EditTrackingPage', segment: 'edit-tracking', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tracking/dashboard-tracking/form-disposisi/form-disposisi.module.ngfactory#FormDisposisiPageModuleNgFactory', name: 'FormDisposisiPage', segment: 'form-disposisi', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tracking/dashboard-tracking/profile-account-tracking/profile-account-tracking.module.ngfactory#ProfileAccountTrackingPageModuleNgFactory', name: 'ProfileAccountTrackingPage', segment: 'profile-account-tracking', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tracking/people-detail-view/people-detail-view.module.ngfactory#PeopleDetailViewPageModuleNgFactory', name: 'PeopleDetailViewPage', segment: 'people-detail-view', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tracking/tracking.module.ngfactory#TrackingPageModuleNgFactory', name: 'TrackingPage', segment: 'tracking', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/update/update.module.ngfactory#UpdatePageModuleNgFactory', name: 'UpdatePage', segment: 'update', priority: 'low', defaultHistory: [] }\n  ]\n}),\n    SDKBrowserModule.forRoot(),\n    IonicStorageModule.forRoot(),\n    HttpModule,\n    BrowserAnimationsModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    FileTransfer,\n    Camera,\n    FileOpener,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as i0 from '@angular/core';\nimport * as i1 from './app.module';\nimport * as i2 from 'ionic-angular/components/app/app-root';\nimport * as i3 from '../../node_modules/ionic-angular/components/action-sheet/action-sheet-component.ngfactory';\nimport * as i4 from '../../node_modules/ionic-angular/components/alert/alert-component.ngfactory';\nimport * as i5 from '../../node_modules/ionic-angular/components/app/app-root.ngfactory';\nimport * as i6 from '../../node_modules/ionic-angular/components/loading/loading-component.ngfactory';\nimport * as i7 from '../../node_modules/ionic-angular/components/modal/modal-component.ngfactory';\nimport * as i8 from '../../node_modules/ionic-angular/components/picker/picker-component.ngfactory';\nimport * as i9 from '../../node_modules/ionic-angular/components/popover/popover-component.ngfactory';\nimport * as i10 from '../../node_modules/ionic-angular/components/select/select-popover-component.ngfactory';\nimport * as i11 from '../../node_modules/ionic-angular/components/toast/toast-component.ngfactory';\nimport * as i12 from './app.component.ngfactory';\nimport * as i13 from '../pages/tabs/tabs.ngfactory';\nimport * as i14 from '@angular/common';\nimport * as i15 from '@angular/platform-browser';\nimport * as i16 from 'ionic-angular/gestures/gesture-config';\nimport * as i17 from '@angular/animations/browser';\nimport * as i18 from '@angular/platform-browser/animations';\nimport * as i19 from '@angular/forms';\nimport * as i20 from '@angular/http';\nimport * as i21 from '../shared/sdk/services/core/error.service';\nimport * as i22 from '../shared/sdk/sockets/socket.driver';\nimport * as i23 from '../shared/sdk/sockets/socket.browser';\nimport * as i24 from '../shared/sdk/sockets/socket.connections';\nimport * as i25 from '@angular/animations';\nimport * as i26 from 'ionic-angular/components/action-sheet/action-sheet-controller';\nimport * as i27 from 'ionic-angular/components/app/app';\nimport * as i28 from 'ionic-angular/config/config';\nimport * as i29 from 'ionic-angular/components/alert/alert-controller';\nimport * as i30 from 'ionic-angular/util/events';\nimport * as i31 from 'ionic-angular/util/form';\nimport * as i32 from 'ionic-angular/tap-click/haptic';\nimport * as i33 from 'ionic-angular/platform/platform';\nimport * as i34 from 'ionic-angular/platform/keyboard';\nimport * as i35 from 'ionic-angular/platform/dom-controller';\nimport * as i36 from 'ionic-angular/components/loading/loading-controller';\nimport * as i37 from 'ionic-angular/module';\nimport * as i38 from 'ionic-angular/navigation/url-serializer';\nimport * as i39 from 'ionic-angular/navigation/deep-linker';\nimport * as i40 from 'ionic-angular/util/module-loader';\nimport * as i41 from 'ionic-angular/components/modal/modal-controller';\nimport * as i42 from 'ionic-angular/components/picker/picker-controller';\nimport * as i43 from 'ionic-angular/components/popover/popover-controller';\nimport * as i44 from 'ionic-angular/tap-click/tap-click';\nimport * as i45 from 'ionic-angular/gestures/gesture-controller';\nimport * as i46 from 'ionic-angular/components/toast/toast-controller';\nimport * as i47 from 'ionic-angular/transitions/transition-controller';\nimport * as i48 from '../shared/sdk/storage/storage.swaps';\nimport * as i49 from '../shared/sdk/storage/cookie.browser';\nimport * as i50 from '../shared/sdk/services/core/auth.service';\nimport * as i51 from '../shared/sdk/services/custom/logger.service';\nimport * as i52 from '../shared/sdk/services/core/search.params';\nimport * as i53 from '../shared/sdk/services/custom/SDKModels';\nimport * as i54 from '../shared/sdk/services/core/real.time';\nimport * as i55 from '../shared/sdk/services/custom/User';\nimport * as i56 from '../shared/sdk/services/custom/Acl';\nimport * as i57 from '../shared/sdk/services/custom/Accesstoken';\nimport * as i58 from '../shared/sdk/services/custom/Rolemapping';\nimport * as i59 from '../shared/sdk/services/custom/SiaphDepthrole';\nimport * as i60 from '../shared/sdk/services/custom/SiaphDocuments';\nimport * as i61 from '../shared/sdk/services/custom/SiaphDocumentslibrary';\nimport * as i62 from '../shared/sdk/services/custom/SiaphNoteddocuments';\nimport * as i63 from '../shared/sdk/services/custom/SiaphTrackingdocuments';\nimport * as i64 from '../shared/sdk/services/custom/SiaphUsercredential';\nimport * as i65 from '../shared/sdk/storage/storage.browser';\nimport * as i66 from '@ionic/storage/es2015/storage';\nimport * as i67 from '@ionic-native/status-bar/index';\nimport * as i68 from '@ionic-native/splash-screen/index';\nimport * as i69 from '@ionic-native/file-transfer/index';\nimport * as i70 from '@ionic-native/camera/index';\nimport * as i71 from '@ionic-native/file-opener/index';\nimport * as i72 from 'ionic-angular/util/ionic-error-handler';\nimport * as i73 from 'ionic-angular/platform/platform-registry';\nimport * as i74 from 'ionic-angular/components/app/menu-controller';\nimport * as i75 from 'ionic-angular/util/ng-module-loader';\nimport * as i76 from 'ionic-angular/config/mode-registry';\nimport * as i77 from '../shared/sdk/index';\nimport * as i78 from '@ionic/storage/es2015/index';\nimport * as i79 from './app.component';\nexport const AppModuleNgFactory:i0.NgModuleFactory<i1.AppModule> = i0.ɵcmf(i1.AppModule,\n    [i2.IonicApp],(_l:any) => {\n      return i0.ɵmod([i0.ɵmpd(512,i0.ComponentFactoryResolver,i0.ɵCodegenComponentFactoryResolver,\n          [[8,[i3.ActionSheetCmpNgFactory,i4.AlertCmpNgFactory,i5.IonicAppNgFactory,\n              i6.LoadingCmpNgFactory,i7.ModalCmpNgFactory,i8.PickerCmpNgFactory,i9.PopoverCmpNgFactory,\n              i10.SelectPopoverNgFactory,i11.ToastCmpNgFactory,i12.MyAppNgFactory,\n              i13.TabsPageNgFactory]],[3,i0.ComponentFactoryResolver],i0.NgModuleRef]),\n          i0.ɵmpd(5120,i0.LOCALE_ID,i0.ɵm,[[3,i0.LOCALE_ID]]),i0.ɵmpd(4608,i14.NgLocalization,\n              i14.NgLocaleLocalization,[i0.LOCALE_ID]),i0.ɵmpd(5120,i0.APP_ID,i0.ɵf,\n              ([] as any[])),i0.ɵmpd(5120,i0.IterableDiffers,i0.ɵk,([] as any[])),\n          i0.ɵmpd(5120,i0.KeyValueDiffers,i0.ɵl,([] as any[])),i0.ɵmpd(4608,i15.DomSanitizer,\n              i15.ɵe,[i14.DOCUMENT]),i0.ɵmpd(6144,i0.Sanitizer,(null as any),[i15.DomSanitizer]),\n          i0.ɵmpd(4608,i15.HAMMER_GESTURE_CONFIG,i16.IonicGestureConfig,([] as any[])),\n          i0.ɵmpd(5120,i15.EVENT_MANAGER_PLUGINS,(p0_0:any,p1_0:any,p2_0:any,p2_1:any) => {\n            return [new i15.ɵDomEventsPlugin(p0_0),new i15.ɵKeyEventsPlugin(p1_0),\n                new i15.ɵHammerGesturesPlugin(p2_0,p2_1)];\n          },[i14.DOCUMENT,i14.DOCUMENT,i14.DOCUMENT,i15.HAMMER_GESTURE_CONFIG]),i0.ɵmpd(4608,\n              i15.EventManager,i15.EventManager,[i15.EVENT_MANAGER_PLUGINS,i0.NgZone]),\n          i0.ɵmpd(135680,i15.ɵDomSharedStylesHost,i15.ɵDomSharedStylesHost,[i14.DOCUMENT]),\n          i0.ɵmpd(4608,i15.ɵDomRendererFactory2,i15.ɵDomRendererFactory2,[i15.EventManager,\n              i15.ɵDomSharedStylesHost]),i0.ɵmpd(5120,i17.AnimationDriver,i18.ɵc,([] as any[])),\n          i0.ɵmpd(5120,i17.ɵAnimationStyleNormalizer,i18.ɵd,([] as any[])),i0.ɵmpd(4608,\n              i17.ɵAnimationEngine,i18.ɵb,[i17.AnimationDriver,i17.ɵAnimationStyleNormalizer]),\n          i0.ɵmpd(5120,i0.RendererFactory2,i18.ɵe,[i15.ɵDomRendererFactory2,i17.ɵAnimationEngine,\n              i0.NgZone]),i0.ɵmpd(6144,i15.ɵSharedStylesHost,(null as any),[i15.ɵDomSharedStylesHost]),\n          i0.ɵmpd(4608,i0.Testability,i0.Testability,[i0.NgZone]),i0.ɵmpd(4608,i15.Meta,\n              i15.Meta,[i14.DOCUMENT]),i0.ɵmpd(4608,i15.Title,i15.Title,[i14.DOCUMENT]),\n          i0.ɵmpd(4608,i19.ɵi,i19.ɵi,([] as any[])),i0.ɵmpd(4608,i19.FormBuilder,i19.FormBuilder,\n              ([] as any[])),i0.ɵmpd(4608,i20.BrowserXhr,i20.BrowserXhr,([] as any[])),\n          i0.ɵmpd(4608,i20.ResponseOptions,i20.BaseResponseOptions,([] as any[])),\n          i0.ɵmpd(5120,i20.XSRFStrategy,i20.ɵb,([] as any[])),i0.ɵmpd(4608,i20.XHRBackend,\n              i20.XHRBackend,[i20.BrowserXhr,i20.ResponseOptions,i20.XSRFStrategy]),\n          i0.ɵmpd(4608,i20.RequestOptions,i20.BaseRequestOptions,([] as any[])),i0.ɵmpd(5120,\n              i20.Http,i20.ɵc,[i20.XHRBackend,i20.RequestOptions]),i0.ɵmpd(4608,i21.ErrorHandler,\n              i21.ErrorHandler,([] as any[])),i0.ɵmpd(4608,i22.SocketDriver,i23.SocketBrowser,\n              ([] as any[])),i0.ɵmpd(4608,i24.SocketConnection,i24.SocketConnection,\n              [i22.SocketDriver,i0.NgZone]),i0.ɵmpd(4608,i25.AnimationBuilder,i18.ɵBrowserAnimationBuilder,\n              [i0.RendererFactory2,i15.DOCUMENT]),i0.ɵmpd(4608,i26.ActionSheetController,\n              i26.ActionSheetController,[i27.App,i28.Config]),i0.ɵmpd(4608,i29.AlertController,\n              i29.AlertController,[i27.App,i28.Config]),i0.ɵmpd(4608,i30.Events,i30.Events,\n              ([] as any[])),i0.ɵmpd(4608,i31.Form,i31.Form,([] as any[])),i0.ɵmpd(4608,\n              i32.Haptic,i32.Haptic,[i33.Platform]),i0.ɵmpd(4608,i34.Keyboard,i34.Keyboard,\n              [i28.Config,i33.Platform,i0.NgZone,i35.DomController]),i0.ɵmpd(4608,\n              i36.LoadingController,i36.LoadingController,[i27.App,i28.Config]),i0.ɵmpd(5120,\n              i14.LocationStrategy,i37.provideLocationStrategy,[i14.PlatformLocation,\n                  [2,i14.APP_BASE_HREF],i28.Config]),i0.ɵmpd(4608,i14.Location,i14.Location,\n              [i14.LocationStrategy]),i0.ɵmpd(5120,i38.UrlSerializer,i38.setupUrlSerializer,\n              [i27.App,i38.DeepLinkConfigToken]),i0.ɵmpd(5120,i39.DeepLinker,i39.setupDeepLinker,\n              [i27.App,i38.UrlSerializer,i14.Location,i40.ModuleLoader,i0.ComponentFactoryResolver]),\n          i0.ɵmpd(4608,i41.ModalController,i41.ModalController,[i27.App,i28.Config,\n              i39.DeepLinker]),i0.ɵmpd(4608,i42.PickerController,i42.PickerController,\n              [i27.App,i28.Config]),i0.ɵmpd(4608,i43.PopoverController,i43.PopoverController,\n              [i27.App,i28.Config,i39.DeepLinker]),i0.ɵmpd(4608,i44.TapClick,i44.TapClick,\n              [i28.Config,i33.Platform,i35.DomController,i27.App,i45.GestureController]),\n          i0.ɵmpd(4608,i46.ToastController,i46.ToastController,[i27.App,i28.Config]),\n          i0.ɵmpd(4608,i47.TransitionController,i47.TransitionController,[i33.Platform,\n              i28.Config]),i0.ɵmpd(4608,i48.InternalStorage,i49.CookieBrowser,([] as any[])),\n          i0.ɵmpd(4608,i50.LoopBackAuth,i50.LoopBackAuth,[i48.InternalStorage]),i0.ɵmpd(4608,\n              i51.LoggerService,i51.LoggerService,([] as any[])),i0.ɵmpd(4608,i52.JSONSearchParams,\n              i52.JSONSearchParams,([] as any[])),i0.ɵmpd(4608,i53.SDKModels,i53.SDKModels,\n              ([] as any[])),i0.ɵmpd(4608,i54.RealTime,i54.RealTime,[i24.SocketConnection,\n              i53.SDKModels,i50.LoopBackAuth]),i0.ɵmpd(4608,i55.UserApi,i55.UserApi,\n              [i20.Http,i24.SocketConnection,i53.SDKModels,i50.LoopBackAuth,i52.JSONSearchParams,\n                  [2,i21.ErrorHandler]]),i0.ɵmpd(4608,i56.AclApi,i56.AclApi,[i20.Http,\n              i24.SocketConnection,i53.SDKModels,i50.LoopBackAuth,i52.JSONSearchParams,\n              [2,i21.ErrorHandler]]),i0.ɵmpd(4608,i57.AccesstokenApi,i57.AccesstokenApi,\n              [i20.Http,i24.SocketConnection,i53.SDKModels,i50.LoopBackAuth,i52.JSONSearchParams,\n                  [2,i21.ErrorHandler]]),i0.ɵmpd(4608,i58.RolemappingApi,i58.RolemappingApi,\n              [i20.Http,i24.SocketConnection,i53.SDKModels,i50.LoopBackAuth,i52.JSONSearchParams,\n                  [2,i21.ErrorHandler]]),i0.ɵmpd(4608,i59.SiaphDepthroleApi,i59.SiaphDepthroleApi,\n              [i20.Http,i24.SocketConnection,i53.SDKModels,i50.LoopBackAuth,i52.JSONSearchParams,\n                  [2,i21.ErrorHandler]]),i0.ɵmpd(4608,i60.SiaphDocumentsApi,i60.SiaphDocumentsApi,\n              [i20.Http,i24.SocketConnection,i53.SDKModels,i50.LoopBackAuth,i52.JSONSearchParams,\n                  [2,i21.ErrorHandler]]),i0.ɵmpd(4608,i61.SiaphDocumentslibraryApi,\n              i61.SiaphDocumentslibraryApi,[i20.Http,i24.SocketConnection,i53.SDKModels,\n                  i50.LoopBackAuth,i52.JSONSearchParams,[2,i21.ErrorHandler]]),i0.ɵmpd(4608,\n              i62.SiaphNoteddocumentsApi,i62.SiaphNoteddocumentsApi,[i20.Http,i24.SocketConnection,\n                  i53.SDKModels,i50.LoopBackAuth,i52.JSONSearchParams,[2,i21.ErrorHandler]]),\n          i0.ɵmpd(4608,i63.SiaphTrackingdocumentsApi,i63.SiaphTrackingdocumentsApi,\n              [i20.Http,i24.SocketConnection,i53.SDKModels,i50.LoopBackAuth,i52.JSONSearchParams,\n                  [2,i21.ErrorHandler]]),i0.ɵmpd(4608,i64.SiaphUsercredentialApi,i64.SiaphUsercredentialApi,\n              [i20.Http,i24.SocketConnection,i53.SDKModels,i50.LoopBackAuth,i52.JSONSearchParams,\n                  [2,i21.ErrorHandler]]),i0.ɵmpd(4608,i48.SDKStorage,i65.StorageBrowser,\n              ([] as any[])),i0.ɵmpd(5120,i66.Storage,i66.provideStorage,[i66.StorageConfigToken]),\n          i0.ɵmpd(4608,i67.StatusBar,i67.StatusBar,([] as any[])),i0.ɵmpd(4608,i68.SplashScreen,\n              i68.SplashScreen,([] as any[])),i0.ɵmpd(4608,i69.FileTransfer,i69.FileTransfer,\n              ([] as any[])),i0.ɵmpd(4608,i70.Camera,i70.Camera,([] as any[])),i0.ɵmpd(4608,\n              i71.FileOpener,i71.FileOpener,([] as any[])),i0.ɵmpd(512,i14.CommonModule,\n              i14.CommonModule,([] as any[])),i0.ɵmpd(512,i0.ErrorHandler,i72.IonicErrorHandler,\n              ([] as any[])),i0.ɵmpd(256,i28.ConfigToken,{},([] as any[])),i0.ɵmpd(1024,\n              i73.PlatformConfigToken,i73.providePlatformConfigs,([] as any[])),i0.ɵmpd(1024,\n              i33.Platform,i33.setupPlatform,[i15.DOCUMENT,i73.PlatformConfigToken,\n                  i0.NgZone]),i0.ɵmpd(1024,i28.Config,i28.setupConfig,[i28.ConfigToken,\n              i33.Platform]),i0.ɵmpd(512,i35.DomController,i35.DomController,[i33.Platform]),\n          i0.ɵmpd(512,i74.MenuController,i74.MenuController,([] as any[])),i0.ɵmpd(512,\n              i27.App,i27.App,[i28.Config,i33.Platform,[2,i74.MenuController]]),i0.ɵmpd(512,\n              i45.GestureController,i45.GestureController,[i27.App]),i0.ɵmpd(256,i38.DeepLinkConfigToken,\n              {links:[{loadChildren:'../pages/home/home.module.ngfactory#AccountPageModuleNgFactory',\n                  name:'HomePage',segment:'home',priority:'low',defaultHistory:([] as any[])},\n                  {loadChildren:'../pages/kepwal/kepwal.module.ngfactory#KepwalPageModuleNgFactory',\n                      name:'KepwalPage',segment:'kepwal',priority:'low',defaultHistory:([] as any[])},\n                  {loadChildren:'../pages/kontak/kontak.module.ngfactory#KontakPageModuleNgFactory',\n                      name:'KontakPage',segment:'kontak',priority:'low',defaultHistory:([] as any[])},\n                  {loadChildren:'../pages/login/login.module.ngfactory#LoginPageModuleNgFactory',\n                      name:'LoginPage',segment:'login',priority:'low',defaultHistory:([] as any[])},\n                  {loadChildren:'../pages/perda/perda.module.ngfactory#PerdaPageModuleNgFactory',\n                      name:'PerdaPage',segment:'perda',priority:'low',defaultHistory:([] as any[])},\n                  {loadChildren:'../pages/perpus/perpus.module.ngfactory#PerpusPageModuleNgFactory',\n                      name:'PerpusPage',segment:'perpus',priority:'low',defaultHistory:([] as any[])},\n                  {loadChildren:'../pages/perwal/perwal.module.ngfactory#PerwalPageModuleNgFactory',\n                      name:'PerwalPage',segment:'perwal',priority:'low',defaultHistory:([] as any[])},\n                  {loadChildren:'../pages/profil/profil.module.ngfactory#ProfilPageModuleNgFactory',\n                      name:'ProfilPage',segment:'profil',priority:'low',defaultHistory:([] as any[])},\n                  {loadChildren:'../pages/tracking/dashboard-tracking/account-tracking/account-tracking.module.ngfactory#AccountTrackingPageModuleNgFactory',\n                      name:'AccountTrackingPage',segment:'account-tracking',priority:'low',\n                      defaultHistory:([] as any[])},{loadChildren:'../pages/tracking/dashboard-tracking/change-password/change-password.module.ngfactory#ChangePasswordPageModuleNgFactory',\n                      name:'ChangePasswordPage',segment:'change-password',priority:'low',\n                      defaultHistory:([] as any[])},{loadChildren:'../pages/tracking/dashboard-tracking/dashboard-tracking.module.ngfactory#DashboardTrackingPageModuleNgFactory',\n                      name:'DashboardTrackingPage',segment:'dashboard-tracking',priority:'low',\n                      defaultHistory:([] as any[])},{loadChildren:'../pages/tracking/dashboard-tracking/detail-tracking/detail-tracking.module.ngfactory#DetailTrackingPageModuleNgFactory',\n                      name:'DetailTrackingPage',segment:'detail-tracking',priority:'low',\n                      defaultHistory:([] as any[])},{loadChildren:'../pages/tracking/dashboard-tracking/edit-tracking/edit-tracking.module.ngfactory#EditTrackingPageModuleNgFactory',\n                      name:'EditTrackingPage',segment:'edit-tracking',priority:'low',\n                      defaultHistory:([] as any[])},{loadChildren:'../pages/tracking/dashboard-tracking/form-disposisi/form-disposisi.module.ngfactory#FormDisposisiPageModuleNgFactory',\n                      name:'FormDisposisiPage',segment:'form-disposisi',priority:'low',\n                      defaultHistory:([] as any[])},{loadChildren:'../pages/tracking/dashboard-tracking/profile-account-tracking/profile-account-tracking.module.ngfactory#ProfileAccountTrackingPageModuleNgFactory',\n                      name:'ProfileAccountTrackingPage',segment:'profile-account-tracking',\n                      priority:'low',defaultHistory:([] as any[])},{loadChildren:'../pages/tracking/people-detail-view/people-detail-view.module.ngfactory#PeopleDetailViewPageModuleNgFactory',\n                      name:'PeopleDetailViewPage',segment:'people-detail-view',priority:'low',\n                      defaultHistory:([] as any[])},{loadChildren:'../pages/tracking/tracking.module.ngfactory#TrackingPageModuleNgFactory',\n                      name:'TrackingPage',segment:'tracking',priority:'low',defaultHistory:([] as any[])},\n                  {loadChildren:'../pages/update/update.module.ngfactory#UpdatePageModuleNgFactory',\n                      name:'UpdatePage',segment:'update',priority:'low',defaultHistory:([] as any[])}]},\n              ([] as any[])),i0.ɵmpd(512,i0.Compiler,i0.Compiler,([] as any[])),i0.ɵmpd(512,\n              i75.NgModuleLoader,i75.NgModuleLoader,[i0.Compiler]),i0.ɵmpd(1024,i40.ModuleLoader,\n              i40.provideModuleLoader,[i75.NgModuleLoader,i0.Injector]),i0.ɵmpd(1024,\n              i0.APP_INITIALIZER,(p0_0:any,p0_1:any,p1_0:any,p2_0:any,p2_1:any,p3_0:any,\n                  p3_1:any,p3_2:any,p3_3:any,p3_4:any,p4_0:any,p4_1:any,p4_2:any,p4_3:any) => {\n                return [i15.ɵc(p0_0,p0_1),i76.registerModeConfigs(p1_0),i30.setupProvideEvents(p2_0,\n                    p2_1),i44.setupTapClick(p3_0,p3_1,p3_2,p3_3,p3_4),i40.setupPreloading(p4_0,\n                    p4_1,p4_2,p4_3)];\n              },[[2,i15.NgProbeToken],[2,i0.NgProbeToken],i28.Config,i33.Platform,\n                  i35.DomController,i28.Config,i33.Platform,i35.DomController,i27.App,\n                  i45.GestureController,i28.Config,i38.DeepLinkConfigToken,i40.ModuleLoader,\n                  i0.NgZone]),i0.ɵmpd(512,i0.ApplicationInitStatus,i0.ApplicationInitStatus,\n              [[2,i0.APP_INITIALIZER]]),i0.ɵmpd(131584,i0.ɵe,i0.ɵe,[i0.NgZone,i0.ɵConsole,\n              i0.Injector,i0.ErrorHandler,i0.ComponentFactoryResolver,i0.ApplicationInitStatus]),\n          i0.ɵmpd(2048,i0.ApplicationRef,(null as any),[i0.ɵe]),i0.ɵmpd(512,i0.ApplicationModule,\n              i0.ApplicationModule,[i0.ApplicationRef]),i0.ɵmpd(512,i15.BrowserModule,\n              i15.BrowserModule,[[3,i15.BrowserModule]]),i0.ɵmpd(512,i19.ɵba,i19.ɵba,\n              ([] as any[])),i0.ɵmpd(512,i19.FormsModule,i19.FormsModule,([] as any[])),\n          i0.ɵmpd(512,i19.ReactiveFormsModule,i19.ReactiveFormsModule,([] as any[])),\n          i0.ɵmpd(512,i37.IonicModule,i37.IonicModule,([] as any[])),i0.ɵmpd(512,i20.HttpModule,\n              i20.HttpModule,([] as any[])),i0.ɵmpd(512,i77.SDKBrowserModule,i77.SDKBrowserModule,\n              ([] as any[])),i0.ɵmpd(512,i78.IonicStorageModule,i78.IonicStorageModule,\n              ([] as any[])),i0.ɵmpd(512,i18.BrowserAnimationsModule,i18.BrowserAnimationsModule,\n              ([] as any[])),i0.ɵmpd(512,i1.AppModule,i1.AppModule,([] as any[])),\n          i0.ɵmpd(256,i2.AppRootToken,i79.MyApp,([] as any[])),i0.ɵmpd(256,i14.APP_BASE_HREF,\n              '/',([] as any[])),i0.ɵmpd(256,i66.StorageConfigToken,(null as any),\n              ([] as any[]))]);\n    });\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3JlbmR5L0RvY3VtZW50cy9SRU5EWS9BV0Qvc2lhcGgtYXBwL3NyYy9hcHAvYXBwLm1vZHVsZS5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9Vc2Vycy9yZW5keS9Eb2N1bWVudHMvUkVORFkvQVdEL3NpYXBoLWFwcC9zcmMvYXBwL2FwcC5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiICJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ngfactory.ts","import { platformBrowser } from '@angular/platform-browser';\n\nimport { AppModuleNgFactory } from './app.module.ngfactory';\nimport { enableProdMode } from '@angular/core';\n\nenableProdMode();\nplatformBrowser().bootstrapModuleFactory(AppModuleNgFactory);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n//import { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/observable/throw';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  // ErrorObservable when rxjs version < rc.5\n  // ErrorObservable<string> when rxjs version = rc.5\n  // I'm leaving any for now to avoid breaking apps using both versions\n  public handleError(error: Response): any {\n    return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/core/error.service.ts","/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { AccessToken } from '../models';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class SocketConnection {\n  private socket: any;\n  private subjects: {\n    onConnect: Subject<any>,\n    onDisconnect: Subject<any>,\n    onAuthenticated: Subject<any>,\n    onUnAuthorized: Subject<any>\n  } = {\n    onConnect: new Subject(),\n    onDisconnect: new Subject(),\n    onAuthenticated: new Subject(),\n    onUnAuthorized: new Subject()\n  };\n  public sharedObservables: {\n    sharedOnConnect?: Observable<any>,\n    sharedOnDisconnect?: Observable<any>,\n    sharedOnAuthenticated?: Observable<any>,\n    sharedOnUnAuthorized?: Observable<any>\n  } = {};\n  public authenticated: boolean = false;\n  /**\n   * @method constructor\n   * @param {SocketDriver} driver Socket IO Driver\n   * @param {NgZone} zone Angular 2 Zone\n   * @description\n   * The constructor will set references for the shared hot observables from\n   * the class subjects. Then it will subscribe each of these observables\n   * that will create a channel that later will be shared between subscribers.\n   **/\n  constructor(\n    @Inject(SocketDriver) private driver: SocketDriver,\n    @Inject(NgZone) private zone: NgZone\n  ) {\n    this.sharedObservables = {\n      sharedOnConnect: this.subjects.onConnect.asObservable().share(),\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().share(),\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().share(),\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().share()\n    };\n    // This is needed to create the first channel, subsequents will share the connection\n    // We are using Hot Observables to avoid duplicating connection status events.\n    this.sharedObservables.sharedOnConnect.subscribe();\n    this.sharedObservables.sharedOnDisconnect.subscribe();\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\n  }\n  /**\n   * @method connect\n   * @param {AccessToken} token AccesToken instance\n   * @return {void}\n   * @description\n   * This method will create a new socket connection when not previously established.\n   * If there is a broken connection it will re-connect.\n   **/\n  public connect(token: AccessToken = null): void {\n    if (!this.socket) {\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n      // Create new socket connection\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n        log: false,\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\n        forceNew: true,\n        forceWebsockets: true,\n        transports: ['websocket']\n      });\n      // Listen for connection\n      this.on('connect', () => {\n        this.subjects.onConnect.next('connected');\n        // Authenticate or start heartbeat now    \n        this.emit('authentication', token);\n      });\n      // Listen for authentication\n      this.on('authenticated', () => {\n        this.authenticated = true;\n        this.subjects.onAuthenticated.next();\n        this.heartbeater();\n      })\n      // Listen for authentication\n      this.on('unauthorized', (err: any) => {\n        this.authenticated = false;\n        this.subjects.onUnAuthorized.next(err);\n      })\n      // Listen for disconnections\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\n    } else if (this.socket && !this.socket.connected){\n      if (typeof this.socket.off === 'function') {\n        this.socket.off();\n      }\n      if (typeof this.socket.destroy === 'function') {\n        this.socket.destroy();\n      }\n      delete this.socket;\n      this.connect(token);\n    }\n  }\n  /**\n   * @method isConnected\n   * @return {boolean}\n   * @description\n   * This method will return true or false depending on established connections\n   **/\n  public isConnected(): boolean {\n    return (this.socket && this.socket.connected);\n  }\n  /**\n   * @method on\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method listen for server events from the current WebSocket connection.\n   * This method is a facade that will wrap the original \"on\" method and run it\n   * within the Angular Zone to avoid update issues.\n   **/\n  public on(event: string, handler: Function): void {\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\n  }\n  /**\n   * @method emit\n   * @param {string} event Event name\n   * @param {any=} data Any type of data\n   * @return {void}\n   * @description\n   * This method will send any type of data to the server according the event set.\n   **/\n  public emit(event: string, data?: any): void {\n    if (data) {\n      this.socket.emit(event, data);\n    } else {\n      this.socket.emit(event);\n    }\n  }\n  /**\n   * @method removeListener\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeListener(event: string, handler: Function): void {\n    if (typeof this.socket.off === 'function') {\n      this.socket.off(event, handler);\n    }\n  }\n  /**\n   * @method removeAllListeners\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeAllListeners(event: string): void {\n    if (typeof this.socket.removeAllListeners === 'function') {\n      this.socket.removeAllListeners(event);\n    }\n  }\n  /**\n   * @method disconnect\n   * @return {void}\n   * @description\n   * This will disconnect the client from the server\n   **/\n  public disconnect(): void {\n    this.socket.disconnect();\n  }\n  /**\n   * @method heartbeater\n   * @return {void}\n   * @description\n   * This will keep the connection as active, even when users are not sending\n   * data, this avoids disconnection because of a connection not being used.\n   **/\n  private heartbeater(): void {\n    let heartbeater: any = setInterval(() => {\n      if (this.isConnected()) {\n        this.socket.emit('lb-ping');\n      } else {\n        this.socket.removeAllListeners('lb-pong');\n        clearInterval(heartbeater);\n      }\n    }, 15000);\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/sockets/socket.connections.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { Subject } from 'rxjs/Subject';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\nvar SocketConnection = (function () {\n    /**\n     * @method constructor\n     * @param {SocketDriver} driver Socket IO Driver\n     * @param {NgZone} zone Angular 2 Zone\n     * @description\n     * The constructor will set references for the shared hot observables from\n     * the class subjects. Then it will subscribe each of these observables\n     * that will create a channel that later will be shared between subscribers.\n     **/\n    function SocketConnection(driver, zone) {\n        this.driver = driver;\n        this.zone = zone;\n        this.subjects = {\n            onConnect: new Subject(),\n            onDisconnect: new Subject(),\n            onAuthenticated: new Subject(),\n            onUnAuthorized: new Subject()\n        };\n        this.sharedObservables = {};\n        this.authenticated = false;\n        this.sharedObservables = {\n            sharedOnConnect: this.subjects.onConnect.asObservable().share(),\n            sharedOnDisconnect: this.subjects.onDisconnect.asObservable().share(),\n            sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().share(),\n            sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().share()\n        };\n        // This is needed to create the first channel, subsequents will share the connection\n        // We are using Hot Observables to avoid duplicating connection status events.\n        this.sharedObservables.sharedOnConnect.subscribe();\n        this.sharedObservables.sharedOnDisconnect.subscribe();\n        this.sharedObservables.sharedOnAuthenticated.subscribe();\n        this.sharedObservables.sharedOnUnAuthorized.subscribe();\n    }\n    /**\n     * @method connect\n     * @param {AccessToken} token AccesToken instance\n     * @return {void}\n     * @description\n     * This method will create a new socket connection when not previously established.\n     * If there is a broken connection it will re-connect.\n     **/\n    SocketConnection.prototype.connect = function (token) {\n        var _this = this;\n        if (token === void 0) { token = null; }\n        if (!this.socket) {\n            console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n            // Create new socket connection\n            this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n                log: false,\n                secure: LoopBackConfig.isSecureWebSocketsSet(),\n                forceNew: true,\n                forceWebsockets: true,\n                transports: ['websocket']\n            });\n            // Listen for connection\n            this.on('connect', function () {\n                _this.subjects.onConnect.next('connected');\n                // Authenticate or start heartbeat now    \n                _this.emit('authentication', token);\n            });\n            // Listen for authentication\n            this.on('authenticated', function () {\n                _this.authenticated = true;\n                _this.subjects.onAuthenticated.next();\n                _this.heartbeater();\n            });\n            // Listen for authentication\n            this.on('unauthorized', function (err) {\n                _this.authenticated = false;\n                _this.subjects.onUnAuthorized.next(err);\n            });\n            // Listen for disconnections\n            this.on('disconnect', function (status) { return _this.subjects.onDisconnect.next(status); });\n        }\n        else if (this.socket && !this.socket.connected) {\n            if (typeof this.socket.off === 'function') {\n                this.socket.off();\n            }\n            if (typeof this.socket.destroy === 'function') {\n                this.socket.destroy();\n            }\n            delete this.socket;\n            this.connect(token);\n        }\n    };\n    /**\n     * @method isConnected\n     * @return {boolean}\n     * @description\n     * This method will return true or false depending on established connections\n     **/\n    SocketConnection.prototype.isConnected = function () {\n        return (this.socket && this.socket.connected);\n    };\n    /**\n     * @method on\n     * @param {string} event Event name\n     * @param {Function} handler Event listener handler\n     * @return {void}\n     * @description\n     * This method listen for server events from the current WebSocket connection.\n     * This method is a facade that will wrap the original \"on\" method and run it\n     * within the Angular Zone to avoid update issues.\n     **/\n    SocketConnection.prototype.on = function (event, handler) {\n        var _this = this;\n        this.socket.on(event, function (data) { return _this.zone.run(function () { return handler(data); }); });\n    };\n    /**\n     * @method emit\n     * @param {string} event Event name\n     * @param {any=} data Any type of data\n     * @return {void}\n     * @description\n     * This method will send any type of data to the server according the event set.\n     **/\n    SocketConnection.prototype.emit = function (event, data) {\n        if (data) {\n            this.socket.emit(event, data);\n        }\n        else {\n            this.socket.emit(event);\n        }\n    };\n    /**\n     * @method removeListener\n     * @param {string} event Event name\n     * @param {Function} handler Event listener handler\n     * @return {void}\n     * @description\n     * This method will wrap the original \"on\" method and run it within the Angular Zone\n     * Note: off is being used since the nativescript socket io client does not provide\n     * removeListener method, but only provides with off which is provided in any platform.\n     **/\n    SocketConnection.prototype.removeListener = function (event, handler) {\n        if (typeof this.socket.off === 'function') {\n            this.socket.off(event, handler);\n        }\n    };\n    /**\n     * @method removeAllListeners\n     * @param {string} event Event name\n     * @param {Function} handler Event listener handler\n     * @return {void}\n     * @description\n     * This method will wrap the original \"on\" method and run it within the Angular Zone\n     * Note: off is being used since the nativescript socket io client does not provide\n     * removeListener method, but only provides with off which is provided in any platform.\n     **/\n    SocketConnection.prototype.removeAllListeners = function (event) {\n        if (typeof this.socket.removeAllListeners === 'function') {\n            this.socket.removeAllListeners(event);\n        }\n    };\n    /**\n     * @method disconnect\n     * @return {void}\n     * @description\n     * This will disconnect the client from the server\n     **/\n    SocketConnection.prototype.disconnect = function () {\n        this.socket.disconnect();\n    };\n    /**\n     * @method heartbeater\n     * @return {void}\n     * @description\n     * This will keep the connection as active, even when users are not sending\n     * data, this avoids disconnection because of a connection not being used.\n     **/\n    SocketConnection.prototype.heartbeater = function () {\n        var _this = this;\n        var heartbeater = setInterval(function () {\n            if (_this.isConnected()) {\n                _this.socket.emit('lb-ping');\n            }\n            else {\n                _this.socket.removeAllListeners('lb-pong');\n                clearInterval(heartbeater);\n            }\n        }, 15000);\n        this.socket.on('lb-pong', function (data) { return console.info('Heartbeat: ', data); });\n    };\n    return SocketConnection;\n}());\nSocketConnection = __decorate([\n    Injectable(),\n    __param(0, Inject(SocketDriver)),\n    __param(1, Inject(NgZone)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof SocketDriver !== \"undefined\" && SocketDriver) === \"function\" && _a || Object, typeof (_b = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _b || Object])\n], SocketConnection);\nexport { SocketConnection };\nvar _a, _b;\n//# sourceMappingURL=socket.connections.js.map\n\n\n// WEBPACK FOOTER //\n// socket.connections.js","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Headers, Request, RequestOptions } from '@angular/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { JSONSearchParams } from './search.params';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      if (url.match(/fk/)) {\n        let arr = url.split('/'); arr.pop();\n        url = arr.join('/');\n      }\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\n      let subject: Subject<any> = new Subject<any>();\n      this.connection.on(event, (res: any) => subject.next(res));\n      return subject.asObservable();\n    } else {\n      // Headers to be sent\n      let headers: Headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      let filter: string = '';\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          filter = `?filter=${ encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n      // Separate where object from url params and add to search query\n      /**\n      CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n      if (urlParams.where) {\n        headers.append('where', JSON.stringify(urlParams.where));\n        delete urlParams.where;\n      }\n      **/\n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${filter}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\n      return this.http.request(request)\n        .map((res: any) => (res.text() != \"\" ? res.json() : {}))\n        .catch((e) => this.errorHandler.handleError(e));\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: Headers): void {\n    if (this.auth.getAccessTokenId()) {\n      headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub oncreate many method\n   */\n  public onCreate<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onCreateMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method onUpdateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub onUpdateAll method\n   */\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, true);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onDeleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onDeleteById method\n   */\n  public onDeleteById<T>(id: any): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpdateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onUpdateAttributes method\n   */\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsert method\n   */\n  public onUpsert<T>(data: any = {}): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertPatch method using patch http method\n   */\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertWithWhere method\n   */\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onReplaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceOrCreate method\n   */\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onReplaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceById method\n   */\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/sdk/services/core/base.service.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Headers, Request, RequestOptions } from '@angular/http';\nimport { JSONSearchParams } from './search.params';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport { SocketConnection } from '../../sockets/socket.connections';\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\nvar BaseLoopBackApi = (function () {\n    function BaseLoopBackApi(http, connection, models, auth, searchParams, errorHandler) {\n        this.http = http;\n        this.connection = connection;\n        this.models = models;\n        this.auth = auth;\n        this.searchParams = searchParams;\n        this.errorHandler = errorHandler;\n        this.model = this.models.get(this.getModelName());\n    }\n    /**\n     * @method request\n     * @param {string}  method      Request method (GET, POST, PUT)\n     * @param {string}  url         Request url (my-host/my-url/:id)\n     * @param {any}     routeParams Values of url parameters\n     * @param {any}     urlParams   Parameters for building url (filter and other)\n     * @param {any}     postBody    Request postBody\n     * @return {Observable<any>}\n     * @description\n     * This is a core method, every HTTP Call will be done from here, every API Service will\n     * extend this class and use this method to get RESTful communication.\n     **/\n    BaseLoopBackApi.prototype.request = function (method, url, routeParams, urlParams, postBody, pubsub, customHeaders) {\n        var _this = this;\n        if (routeParams === void 0) { routeParams = {}; }\n        if (urlParams === void 0) { urlParams = {}; }\n        if (postBody === void 0) { postBody = {}; }\n        if (pubsub === void 0) { pubsub = false; }\n        // Transpile route variables to the actual request Values\n        Object.keys(routeParams).forEach(function (key) {\n            url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\");\n        });\n        if (pubsub) {\n            if (url.match(/fk/)) {\n                var arr = url.split('/');\n                arr.pop();\n                url = arr.join('/');\n            }\n            var event = (\"[\" + method + \"]\" + url).replace(/\\?/, '');\n            var subject_1 = new Subject();\n            this.connection.on(event, function (res) { return subject_1.next(res); });\n            return subject_1.asObservable();\n        }\n        else {\n            // Headers to be sent\n            var headers = new Headers();\n            headers.append('Content-Type', 'application/json');\n            // Authenticate request\n            this.authenticate(url, headers);\n            // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n            // that are the actual body, Custom remote method properties are different and need\n            // to be wrapped into a body object\n            var body = void 0;\n            var postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : [];\n            if (postBodyKeys.length === 1) {\n                body = postBody[postBodyKeys.shift()];\n            }\n            else {\n                body = postBody;\n            }\n            var filter = '';\n            // Separate filter object from url params and add to search query\n            if (urlParams.filter) {\n                if (LoopBackConfig.isHeadersFilteringSet()) {\n                    headers.append('filter', JSON.stringify(urlParams.filter));\n                }\n                else {\n                    filter = \"?filter=\" + encodeURIComponent(JSON.stringify(urlParams.filter));\n                }\n                delete urlParams.filter;\n            }\n            // Separate where object from url params and add to search query\n            /**\n            CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n            - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n            - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328\n            if (urlParams.where) {\n              headers.append('where', JSON.stringify(urlParams.where));\n              delete urlParams.where;\n            }\n            **/\n            if (typeof customHeaders === 'function') {\n                headers = customHeaders(headers);\n            }\n            this.searchParams.setJSON(urlParams);\n            var request = new Request(new RequestOptions({\n                headers: headers,\n                method: method,\n                url: \"\" + url + filter,\n                search: Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n                body: body ? JSON.stringify(body) : undefined,\n                withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n            }));\n            return this.http.request(request)\n                .map(function (res) { return (res.text() != \"\" ? res.json() : {}); })\n                .catch(function (e) { return _this.errorHandler.handleError(e); });\n        }\n    };\n    /**\n     * @method authenticate\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @param {string} url Server URL\n     * @param {Headers} headers HTTP Headers\n     * @return {void}\n     * @description\n     * This method will try to authenticate using either an access_token or basic http auth\n     */\n    BaseLoopBackApi.prototype.authenticate = function (url, headers) {\n        if (this.auth.getAccessTokenId()) {\n            headers.append('Authorization', LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId());\n        }\n    };\n    /**\n     * @method create\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @param {T} data Generic data type\n     * @return {Observable<T>}\n     * @description\n     * Generic create method\n     */\n    BaseLoopBackApi.prototype.create = function (data, customHeaders) {\n        var _this = this;\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path\n        ].join('/'), undefined, undefined, { data: data }, null, customHeaders).map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method onCreate\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @param {T[]} data Generic data type array\n     * @return {Observable<T[]>}\n     * @description\n     * Generic pubsub oncreate many method\n     */\n    BaseLoopBackApi.prototype.onCreate = function (data) {\n        var _this = this;\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path\n        ].join('/'), undefined, undefined, { data: data }, true)\n            .map(function (datum) { return datum.map(function (data) { return _this.model.factory(data); }); });\n    };\n    /**\n     * @method createMany\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @param {T[]} data Generic data type array\n     * @return {Observable<T[]>}\n     * @description\n     * Generic create many method\n     */\n    BaseLoopBackApi.prototype.createMany = function (data, customHeaders) {\n        var _this = this;\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path\n        ].join('/'), undefined, undefined, { data: data }, null, customHeaders)\n            .map(function (datum) { return datum.map(function (data) { return _this.model.factory(data); }); });\n    };\n    /**\n     * @method onCreateMany\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @param {T[]} data Generic data type array\n     * @return {Observable<T[]>}\n     * @description\n     * Generic create many method\n     */\n    BaseLoopBackApi.prototype.onCreateMany = function (data) {\n        var _this = this;\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path\n        ].join('/'), undefined, undefined, { data: data }, true)\n            .map(function (datum) { return datum.map(function (data) { return _this.model.factory(data); }); });\n    };\n    /**\n     * @method findById\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @param {any} data Generic data type\n     * @return {Observable<T>}\n     * @description\n     * Generic findById method\n     */\n    BaseLoopBackApi.prototype.findById = function (id, filter, customHeaders) {\n        var _this = this;\n        if (filter === void 0) { filter = {}; }\n        var _urlParams = {};\n        if (filter)\n            _urlParams.filter = filter;\n        return this.request('GET', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            ':id'\n        ].join('/'), { id: id }, _urlParams, undefined, null, customHeaders)\n            .map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method find\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T[+>}\n     * @description\n     * Generic find method\n     */\n    BaseLoopBackApi.prototype.find = function (filter, customHeaders) {\n        var _this = this;\n        if (filter === void 0) { filter = {}; }\n        return this.request('GET', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path\n        ].join('/'), undefined, { filter: filter }, undefined, null, customHeaders)\n            .map(function (datum) { return datum.map(function (data) { return _this.model.factory(data); }); });\n    };\n    /**\n     * @method exists\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T[]>}\n     * @description\n     * Generic exists method\n     */\n    BaseLoopBackApi.prototype.exists = function (id, customHeaders) {\n        return this.request('GET', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            ':id/exists'\n        ].join('/'), { id: id }, undefined, undefined, null, customHeaders);\n    };\n    /**\n     * @method findOne\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic findOne method\n     */\n    BaseLoopBackApi.prototype.findOne = function (filter, customHeaders) {\n        var _this = this;\n        if (filter === void 0) { filter = {}; }\n        return this.request('GET', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            'findOne'\n        ].join('/'), undefined, { filter: filter }, undefined, null, customHeaders)\n            .map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method updateAll\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T[]>}\n     * @description\n     * Generic updateAll method\n     */\n    BaseLoopBackApi.prototype.updateAll = function (where, data, customHeaders) {\n        if (where === void 0) { where = {}; }\n        var _urlParams = {};\n        if (where)\n            _urlParams.where = where;\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            'update'\n        ].join('/'), undefined, _urlParams, { data: data }, null, customHeaders);\n    };\n    /**\n     * @method onUpdateAll\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T[]>}\n     * @description\n     * Generic pubsub onUpdateAll method\n     */\n    BaseLoopBackApi.prototype.onUpdateAll = function (where, data) {\n        if (where === void 0) { where = {}; }\n        var _urlParams = {};\n        if (where)\n            _urlParams.where = where;\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            'update'\n        ].join('/'), undefined, _urlParams, { data: data }, true);\n    };\n    /**\n     * @method deleteById\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic deleteById method\n     */\n    BaseLoopBackApi.prototype.deleteById = function (id, customHeaders) {\n        var _this = this;\n        return this.request('DELETE', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            ':id'\n        ].join('/'), { id: id }, undefined, undefined, null, customHeaders)\n            .map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method onDeleteById\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic pubsub onDeleteById method\n     */\n    BaseLoopBackApi.prototype.onDeleteById = function (id) {\n        var _this = this;\n        return this.request('DELETE', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            ':id'\n        ].join('/'), { id: id }, undefined, undefined, true).map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method count\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<{ count: number }>}\n     * @description\n     * Generic count method\n     */\n    BaseLoopBackApi.prototype.count = function (where, customHeaders) {\n        if (where === void 0) { where = {}; }\n        var _urlParams = {};\n        if (where)\n            _urlParams.where = where;\n        return this.request('GET', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            'count'\n        ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n    };\n    /**\n     * @method updateAttributes\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic updateAttributes method\n     */\n    BaseLoopBackApi.prototype.updateAttributes = function (id, data, customHeaders) {\n        var _this = this;\n        return this.request('PUT', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            ':id'\n        ].join('/'), { id: id }, undefined, { data: data }, null, customHeaders)\n            .map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method onUpdateAttributes\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic onUpdateAttributes method\n     */\n    BaseLoopBackApi.prototype.onUpdateAttributes = function (id, data) {\n        var _this = this;\n        return this.request('PUT', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            ':id'\n        ].join('/'), { id: id }, undefined, { data: data }, true).map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method upsert\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic upsert method\n     */\n    BaseLoopBackApi.prototype.upsert = function (data, customHeaders) {\n        var _this = this;\n        if (data === void 0) { data = {}; }\n        return this.request('PUT', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n        ].join('/'), undefined, undefined, { data: data }, null, customHeaders)\n            .map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method onUpsert\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic pubsub onUpsert method\n     */\n    BaseLoopBackApi.prototype.onUpsert = function (data) {\n        var _this = this;\n        if (data === void 0) { data = {}; }\n        return this.request('PUT', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n        ].join('/'), undefined, undefined, { data: data }, true).map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method upsertPatch\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic upsert method using patch http method\n     */\n    BaseLoopBackApi.prototype.upsertPatch = function (data, customHeaders) {\n        var _this = this;\n        if (data === void 0) { data = {}; }\n        return this.request('PATCH', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n        ].join('/'), undefined, undefined, { data: data }, null, customHeaders)\n            .map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method onUpsertPatch\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic pubsub onUpsertPatch method using patch http method\n     */\n    BaseLoopBackApi.prototype.onUpsertPatch = function (data) {\n        var _this = this;\n        if (data === void 0) { data = {}; }\n        return this.request('PATCH', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n        ].join('/'), undefined, undefined, { data: data }, true).map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method upsertWithWhere\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic upsertWithWhere method\n     */\n    BaseLoopBackApi.prototype.upsertWithWhere = function (where, data, customHeaders) {\n        var _this = this;\n        if (where === void 0) { where = {}; }\n        if (data === void 0) { data = {}; }\n        var _urlParams = {};\n        if (where)\n            _urlParams.where = where;\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            'upsertWithWhere'\n        ].join('/'), undefined, _urlParams, { data: data }, null, customHeaders)\n            .map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method onUpsertWithWhere\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic pubsub onUpsertWithWhere method\n     */\n    BaseLoopBackApi.prototype.onUpsertWithWhere = function (where, data) {\n        var _this = this;\n        if (where === void 0) { where = {}; }\n        if (data === void 0) { data = {}; }\n        var _urlParams = {};\n        if (where)\n            _urlParams.where = where;\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            'upsertWithWhere'\n        ].join('/'), undefined, _urlParams, { data: data }, true).map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method replaceOrCreate\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic replaceOrCreate method\n     */\n    BaseLoopBackApi.prototype.replaceOrCreate = function (data, customHeaders) {\n        var _this = this;\n        if (data === void 0) { data = {}; }\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            'replaceOrCreate'\n        ].join('/'), undefined, undefined, { data: data }, null, customHeaders)\n            .map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method onReplaceOrCreate\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic onReplaceOrCreate method\n     */\n    BaseLoopBackApi.prototype.onReplaceOrCreate = function (data) {\n        var _this = this;\n        if (data === void 0) { data = {}; }\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            'replaceOrCreate'\n        ].join('/'), undefined, undefined, { data: data }, true).map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method replaceById\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic replaceById method\n     */\n    BaseLoopBackApi.prototype.replaceById = function (id, data, customHeaders) {\n        var _this = this;\n        if (data === void 0) { data = {}; }\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            ':id', 'replace'\n        ].join('/'), { id: id }, undefined, { data: data }, null, customHeaders)\n            .map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method onReplaceById\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<T>}\n     * @description\n     * Generic onReplaceById method\n     */\n    BaseLoopBackApi.prototype.onReplaceById = function (id, data) {\n        var _this = this;\n        if (data === void 0) { data = {}; }\n        return this.request('POST', [\n            LoopBackConfig.getPath(),\n            LoopBackConfig.getApiVersion(),\n            this.model.getModelDefinition().path,\n            ':id', 'replace'\n        ].join('/'), { id: id }, undefined, { data: data }, true).map(function (data) { return _this.model.factory(data); });\n    };\n    /**\n     * @method createChangeStream\n     * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n     * @license MIT\n     * @return {Observable<any>}\n     * @description\n     * Generic createChangeStream method\n     */\n    BaseLoopBackApi.prototype.createChangeStream = function () {\n        var subject = new Subject();\n        if (typeof EventSource !== 'undefined') {\n            var emit = function (msg) { return subject.next(JSON.parse(msg.data)); };\n            var source = new EventSource([\n                LoopBackConfig.getPath(),\n                LoopBackConfig.getApiVersion(),\n                this.model.getModelDefinition().path,\n                'change-stream'\n            ].join('/'));\n            source.addEventListener('data', emit);\n            source.onerror = emit;\n        }\n        else {\n            console.warn('SDK Builder: EventSource is not supported');\n        }\n        return subject.asObservable();\n    };\n    return BaseLoopBackApi;\n}());\nBaseLoopBackApi = __decorate([\n    Injectable(),\n    __param(0, Inject(Http)),\n    __param(1, Inject(SocketConnection)),\n    __param(2, Inject(SDKModels)),\n    __param(3, Inject(LoopBackAuth)),\n    __param(4, Inject(JSONSearchParams)),\n    __param(5, Optional()), __param(5, Inject(ErrorHandler)),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof SocketConnection !== \"undefined\" && SocketConnection) === \"function\" && _b || Object, typeof (_c = typeof SDKModels !== \"undefined\" && SDKModels) === \"function\" && _c || Object, typeof (_d = typeof LoopBackAuth !== \"undefined\" && LoopBackAuth) === \"function\" && _d || Object, typeof (_e = typeof JSONSearchParams !== \"undefined\" && JSONSearchParams) === \"function\" && _e || Object, typeof (_f = typeof ErrorHandler !== \"undefined\" && ErrorHandler) === \"function\" && _f || Object])\n], BaseLoopBackApi);\nexport { BaseLoopBackApi };\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=base.service.js.map\n\n\n// WEBPACK FOOTER //\n// base.service.js"]}